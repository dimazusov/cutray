# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    locale: 'ru'

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/*'
        exclude: '../src/{DependencyInjection,Entity,Migrations,Tests,Kernel.php}'

    # controllers are imported separately to make sure services can be injected
    # as action arguments even if you don't extend any base controller class
    App\Controller\:
        resource: '../src/Controller'
        tags: ['controller.service_arguments']

    App\Service\RedisService:
        arguments:
            $host: '%env(REDIS_HOST)%'

    App\Service\ImageService:
        public: true
        arguments:
            $imgDir: '%kernel.project_dir%/public/img'

    App\Service\YamlService:
        public: true
        arguments:
            $rootPath: '%kernel.root_dir%'

    App\Service\ErrorService:
        public: true

    App\Service\ApiManagerService:
        public: true
        class: App\Service\ApiManagerService
        arguments:
            - '@service_container'
            - '@translator'
            - '@logger'
            - '@App\Service\YamlService'
            - '@App\Service\ErrorService'

    App\Service\PasswordManagerService:
        public: true
        class: App\Service\PasswordManagerService
        arguments: ['@security.user_password_encoder.generic']

    App\Entity\ProductListener:
        class: App\Entity\ProductListener
        arguments: ['@App\Service\ImageService']
        tags:
            - name: doctrine.orm.entity_listener
              event: preRemove
              entity: App\Entity\User
                # Entity manager name is optional
              service: '@App\Service\ImageService'

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones