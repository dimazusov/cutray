{"version":3,"sources":["cutrayApi/Api.js","containers/NotFound.js","containers/Navigation.js","containers/List/Column/Image.js","containers/Item/ItemList.js","containers/BreadCrumbs.js","breadCrumbs/BreadCrumbs.js","components/Pagination.js","containers/List/DataList.js","pages/List.js","pages/backoffice/Index.js","accessManager/AccessManager.js","pages/backoffice/BasePage.js","pages/backoffice/BaseList.js","components/List.js","pages/backoffice/product/ProductList.js","components/FormTypes/ParentCategory.js","components/SelectWindow.js","components/FormTypes/UserSelect.js","components/FormTypes/Category.js","containers/ItemsList.js","components/FormTypes/Order.js","cutrayApi/ImagesApi.js","components/FormTypes/Images.js","components/Form.js","pages/backoffice/BaseEdit.js","pages/backoffice/product/ProductAdd.js","pages/backoffice/product/ProductEdit.js","pages/backoffice/category/CategoryList.js","pages/backoffice/category/CategoryAdd.js","pages/backoffice/category/CategoryEdit.js","pages/backoffice/order/OrderList.js","pages/backoffice/order/OrderAdd.js","pages/backoffice/order/OrderEdit.js","containers/Menu.js","containers/Backoffice/Header.js","containers/Backoffice/Footer.js","containers/MobileSearch.js","components/Header.js","containers/Footer.js","cutrayApi/UserApi.js","pages/Authorization.js","containers/Window.js","pages/Registration.js","pages/Logout.js","pages/BaseClosedPage.js","pages/profile/Settings.js","containers/Order/Status.js","containers/Order/Link.js","pages/profile/History.js","containers/Loading.js","pages/profile/Order.js","containers/Image.js","containers/Item/ItemLink.js","pages/Detail.js","pages/Cart.js","pages/Contacts.js","pages/Favourite.js","components/Menu.js","App.js","registerServiceWorker.js","reducers/contacts.js","reducers/backoffice/category.js","reducers/backoffice/product.js","reducers/backoffice/order.js","reducers/list.js","reducers/cart.js","reducers/profile.js","reducers/favourite.js","reducers/header.js","reducers/index.js","index.js"],"names":["Api","get","source","data","callback","this","_query","add","update","delete","queryType","headers","undefined","method","url","_buildUrl","params","key","URLSearchParams","forEach","obj","keys","Object","map","it","itKey","fieldName","path","append","axios","then","response","catch","e","console","log","_buildGetParams","parent","arguments","length","queryParams","substring","getMessages","isSuccess","NotFound","react_default","a","createElement","React","Component","Navigation","_this","props","items","className","navigationName","item","classes","isActive","react_router_dom","to","link","onClick","onLinkClick","name","Image","imgPaths","paths","split","src","window","location","hostname","alt","defaultImage","ItemsList","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","getFavouriteClassNames","bind","assertThisInitialized","getBasketClassNames","vendor","id","isFavourite","isInCart","_this2","getLink","Column_Image","price","onFavouriteClick","onBasketClick","BreadCrumbs","updateSearchValue","aria-label","values","aria-current","isNeedCheckChain","seonamesFromUrl","nameSubPart","push","chainCategories","mainCategory","seoname","cleft","cright","lastSubCat","category","res","results","loadBreadCrumbs","parent_id","error","parentId","reverse","checkChain","unshift","i","CustomPagination","changePageTo","getPrevLinkToPage","getNextLinkToPage","getLinkToPage","state","showCount","countOnPage","totalCount","activePage","beforeActivePage","afterActivePage","page","prevPage","nextPage","countPages","search","pathname","paramsWithoutPage","filter","join","beforeFromPage","afterToPage","pagItems","_loop","PaginationItem","_","PaginationLink","active","_loop2","lastPage","Container","Pagination","DataList","Math","ceil","children","Pagination_CustomPagination","List","isNotFound","breadCrumbsParts","chainSeonames","getActivePage","loadProducts","loadCategories","getMenu","getProducts","init","match","getChain","err","chain","lastCategory","updateBreadCrumbs","updateCurrentCategory","ids","currentCategory","assign","childIds","setState","catId","_this3","categories","updateCategories","_this4","productQueryParams","product","category_ids","searchValue","updateData","queryString","parse","parseInt","prevProps","prevState","snapshot","isSearch","updateIsSearch","productId","deleteProductFromCart","addProductToCart","forceUpdate","deleteProductFromFavourite","addProductToFavourite","favourites","productsInCart","_this5","containers_Navigation","_this6","products","List_DataList","ItemList","img_paths","_this7","containers_NotFound","containers_BreadCrumbs","breadCrumbs","connect","header","favourite","cart","list","isNeedSearch","dispatch","type","Index","href","AccessManager","allowRoles","userRoles","indexOf","BasePage","token","check","BaseList","moveToCreate","getListHeader","Row","Col","label","Button","getCountPages","getEditLink","getTableBody","defineProperty","updateList","SuperResponsiveTable","columns","column","columnKey","align","variant","edit_default","onDelete","clear_default","getTableHeader","getRenderNotFound","ProductList","getPage","getList","setProducts","checkAccess","components_List_List","showedColumns","react_router","profile","editFields","setPage","ParentCategory","onChange","initCategory","getCategory","getParentCallback","removeChildrenBehindFrom","isInit","isLoading","afterInit","initCategoryId","selectedId","value","fadeCategoryId","childs","concat","toConsumableArray","getParentCategories","isLastSelected","newState","slice","target","Input","onMouseDown","childCategory","keyChildCategory","SelectWindow","title","searchFields","searchedData","loadPage","field","fieldKey","onSelect","toogleWindow","control_point_default","Modal","size","show","isWindowOpen","onHide","aria-labelledby","Header","closeButton","Title","Body","Form","Control","updateSearchField","as","UserSelect","isSelect","isSelectWindowOpen","titleSelectWindow","selectWindowSource","searchFieldsSelectWindow","user","email","getUserById","isSelected","SelectWindow_SelectWindow","Category","api","headerItem","action","lineKey","getItemContent","actions","actionItem","actionName","body","getLine","Order","productHeaders","countAction","productsData","productActions","getAppendButton","getTotal","product_id","count","nextProps","nextState","nextContext","isExists","objectSpread","actionType","reduce","sum","productData","isShowAppendButton","total","containers_ItemsList","ImagesApi","getImageToken","formData","FormData","_getUrl","Content-Type","post","Images","images","imageToken","authToken","imagesApi","blobs","onInit","position","getAttribute","image","files","blob","splice","ReactIf","condition","onAdd","CustomForm","fields","isEdit","isShowSuccess","isShowError","onSave","onImageInit","setInterval","setTimeout","formField","FormTypes_Images","FormTypes_Category","FormTypes_UserSelect","FormTypes_Order","FormTypes_ParentCategory","rows","Group","Label","sweetalert_react_min_default","text","onConfirm","timer","confirmButtonColor","BaseEdit","getId","onEdit","initEdit","onChangeFields","changeFields","ProductAdd","getSource","components_Form","ProductEdit","CategoryList","setCategories","CategoryAdd","CategoryEdit","OrderList","setOrder","order","OrderAdd","OrderEdit","Menu","links","Navbar","color","light","expand","Nav","navbar","NavItem","Backoffice_Header","es_Col","Menu_Menu","Footer","es_Container","es_Row","height","Date","getFullYear","MobileSearch","isBgOpen","onSearch","toogleBg","getSearchInputBlock","updateHeader","onMobileSearch","userId","openMenu","containers_MobileSearch","getUserBlock","currentUserId","containers_Footer","qs","require","UserApi","register","__query","apiURL","auth","logout","getInfo","config","stringify","Authorization","password","errors","isRedirectToProfile","addErrors","event","newData","preventDefault","messages","arr","updateUserData","user_id","roles","placeholder","userData","Window","withReactContent","Swal","Registration","repeat_password","registration","clearData","fire","Logout","userApi","clearUserData","BaseClosedPage","accessRoles","Settings","isAllowAccess","handleChange","handleSubmit","load","cutrayApi","updateErrors","clearErrorField","getNavigationItems","validated","onSubmit","md","controlId","autoComplete","isInvalid","formErrors","Feedback","disabled","updateIsLoading","Status","statusCode","getStatusDescription","code","OrderLink","History","isEmpty","orders","loadOrders","loadOrdersProducts","getUniqueArr","index","self","text-align","Link","Order_Status","status","amount","Loading","OrderPage","Loading_Loading","ItemLink","Detail","getParams","similars","carouselSelectItem","countSimilar","getCountSimilar","checkInCart","getProductById","addToBasket","getCartButtonText","addEventListener","innerWidth","sub0","getSimilarByCatId","category_id","seonameWithId","NaN","cartProducts","whirligig","Carousel","activeIndex","Item","containers_Image","full_description","prev","next","react_whirligig_es","slideClass","visibleSlides","ref","_whirligigInstance","Item_ItemLink","Cart","registerOrder","getOrderButton","clearAll","updateCart","deleteItem","Contacts","subject","message","clearErrors","contacts","Favourite","deleteProduct","onMenuStateChange","closeMenu","menuState","isMenuOpen","isOpen","BurgerMenu","pageWrapId","onStateChange","getUserBlockMenu","App","_ref","store","es","components_Menu","components_Header","exact","component","from","isLocalhost","Boolean","registerValidSW","swUrl","navigator","serviceWorker","onupdatefound","installingWorker","installing","onstatechange","controller","initialState","localStorage","getItem","JSON","getProductFromLocalStorage","result","getCurrentIdFromLocalStorage","getUserRolesFromLocalStorage","getFavouriteProductFromLocalStorage","combineReducers","routing","routerReducer","setItem","isFind","removeItem","hash","createStore","rootReducer","ReactDOM","render","src_App","document","getElementById","URL","process","origin","fetch","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.06809c5f.chunk.js","sourcesContent":["import axios from 'axios';\n\nconst statusFieldName = 'status';\nconst errMesssageFieldName = 'messages';\nconst statusError = 'error';\nconst statusSuccess = 'success';\n\nconst apiURL = 'http://localhost/_api/';\n\nexport default {\n    get: function(source, data, callback) {\n        this._query('get', source, data, callback);\n    },\n\n    add: function(source, data, callback) {\n        this._query('add', source, data, callback);\n    },\n    update: function(source, data, callback) {\n        this._query('update', source, data, callback);\n    },\n\n    delete: function(source, data, callback) {\n        this._query('delete', source, data, callback);\n    },\n\n    _query: function(queryType, source, data, callback) {\n        let headers = {};\n\n        if (data['token'] != undefined) {\n            headers['X-AUTH-TOKEN'] = data['token'];\n\n            delete data['token'];\n        }\n\n        var method = queryType == 'get' ? 'get' : 'post';\n        var url    = this._buildUrl(queryType, source, data);\n        var params = {};\n\n        if(method == 'post') {\n            params = new URLSearchParams();\n            for (var key in data) {\n                data[key].forEach((obj) => {\n                    var keys = Object.keys(obj);\n\n                    if (typeof obj[keys[0]] == 'object') {\n                        obj[keys[0]].map((it,itKey) => {\n                            Object.keys(it).map(fieldName => {\n                                let path = key + '[' + keys[0] + ']['+itKey+']['+fieldName+']';\n\n                                params.append(path, obj[keys[0]][itKey][fieldName]);\n                            })\n                        })\n                    } else {\n                        params.append(key + '[' + keys[0] + ']', obj[keys[0]]);\n                    }\n                });\n            }\n        }\n\n        axios({\n            method: method,\n            url: url,\n            data: params,\n            headers: headers\n        }).then(function (response) {\n            callback(response.data);\n        })\n        .catch(function (e) {\n              console.log('error');\n              console.log(e);\n        });\n    },\n    _buildGetParams: function (data, parent = '') {\n        var queryParams = '';\n\n        for (var key in data) {\n            if (typeof data[key] === 'object') {\n                if(parent == '') {\n                    queryParams += this._buildGetParams(data[key], key);\n                } else {\n                    queryParams += this._buildGetParams(data[key], parent + '[' + key + ']');\n                }\n            } else {\n                queryParams += parent + '[' + key + ']' + '=' + data[key] + '&';\n            }\n        }\n\n        if (parent == '') {\n            queryParams = queryParams.substring(0, queryParams.length - 1);\n        }\n\n        return queryParams;\n    },\n    _buildUrl: function (queryType, source, data) {\n        var url = apiURL + source + '/' + queryType;\n\n        if(queryType == 'get') {\n            url += '?' + this._buildGetParams(data);\n        }\n\n        return url;\n    },\n    getMessages(response) {\n        return response[errMesssageFieldName];\n    },\n    isSuccess(response) {\n        return response[statusFieldName] == statusSuccess;\n    }\n}","import React from \"react\";\n\nclass NotFound extends React.Component {\n    render() {\n        return (\n            <h1>Страница не найдена</h1>\n        );\n    }\n}\n\nexport default NotFound;","import React from \"react\";\nimport {Link} from \"react-router-dom\";\n\nclass Navigation extends React.Component {\n    render() {\n        if (this.props.items.length == 0) {\n            return '';\n        }\n\n        return (\n            <div className=\"navigation\">\n                <div className=\"navigation__header\">{this.props.navigationName}:</div>\n\n                {this.props.items.map((item, key) => {\n                    let classes = '';\n\n                    if (item.isActive != undefined && item.isActive) {\n                        classes += 'navigation__link_active';\n                    }\n\n                    return (\n                        <div className=\"navigation__link\" key={key}>\n                            <Link to={item.link} className={classes} onClick={this.props.onLinkClick}>\n                                {item.name}\n                            </Link>\n                        </div>\n                    );\n                })}\n            </div>\n        );\n    }\n}\n\nexport default Navigation;\n\n\n","import React from \"react\";\n\nclass Image extends React.Component {\n    render() {\n\n        if(this.props.imgPaths) {\n            let paths = this.props.imgPaths.split(',');\n            let src = 'http://' + window.location.hostname + '/img/product/' + paths[0];\n\n            return (\n                <img className={this.props.className} src={src} alt=\"\"/>\n            );\n        }\n\n        if (this.props.defaultImage) {\n            return <img className={this.props.className} src={this.props.defaultImage} alt=\"\"/>\n        }\n\n        return <div>Нет изображения</div>;\n    }\n\n}\n\nexport default Image;\n\n","import React from \"react\";\nimport Image from \"../../containers/List/Column/Image\";\nimport { Link } from \"react-router-dom\";\n\nclass ItemsList extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.getFavouriteClassNames = this.getFavouriteClassNames.bind(this);\n        this.getBasketClassNames    = this.getBasketClassNames.bind(this);\n    }\n\n    getLink() {\n        return '/product/' + this.props.vendor + '_' + this.props.id;\n    }\n\n    getFavouriteClassNames() {\n        let classes = \"item__favourite\";\n\n        if (this.props.isFavourite) {\n            classes += \" item__favourite_selected\";\n        }\n\n        return classes;\n    }\n\n    getBasketClassNames() {\n        let classes = \"item__basket\";\n\n        if (this.props.isInCart) {\n            classes += \" item__basket_selected\";\n        }\n\n        return classes;\n    }\n\n    render() {\n        return (\n            <div className=\"item list__item\">\n                <div className=\"list__item-im-block\">\n                    <Link className={\"list__item-im-link\"} to={this.getLink()}>\n                        <Image\n                            className={\"item__preview-img\"}\n                            imgPaths={this.props.imgPaths}\n                            defaultImage={'/img/item2v1.jpg'}\n                        />\n                    </Link>\n                </div>\n                <div className=\"item__name\">\n                    <Link to={this.getLink()}>{this.props.name}</Link>\n                </div>\n\n                <div className=\"item__price\">{this.props.price} р.</div>\n                <div className={this.getFavouriteClassNames()} onClick={() => {this.props.onFavouriteClick(this.props.id)}}></div>\n                <div className={this.getBasketClassNames()} onClick={() => {this.props.onBasketClick(this.props.id)}}></div>\n            </div>\n        );\n    }\n}\n\nexport default ItemsList;","import React from \"react\";\nimport {Link} from \"react-router-dom\";\n\nclass BreadCrumbs extends React.Component {\n    updateSearchValue() {\n        this.props.updateSearchValue('');\n    }\n\n    render() {\n        return (\n            <nav aria-label=\"breadcrumb\">\n                <ol className=\"breadcrumb\">\n                    {this.props.values.map((item, key) => {\n                        return (\n                            <li key={key} className=\"breadcrumb-item active\" aria-current=\"page\">\n                                <Link to={item.link} onClick={this.props.onLinkClick}>\n                                    {item.name}\n                                </Link>\n                            </li>\n                        );\n                    })}\n                </ol>\n            </nav>\n        );\n    }\n}\n\nexport default BreadCrumbs;","import Api from \"../cutrayApi/Api\";\n\nexport default class BreadCrumbs {\n    constructor(params, isNeedCheckChain = true) {\n        let seonamesFromUrl = [];\n\n        // get sub parameters\n        [0,1,2,3].map((item) => {\n            let nameSubPart = 'sub' + item;\n\n            if (params[nameSubPart]) {\n                seonamesFromUrl.push(params[nameSubPart]);\n            }\n        });\n\n        this.isNeedCheckChain = isNeedCheckChain;\n        this.seonamesFromUrl = seonamesFromUrl;\n        this.chainCategories = [];\n        this.mainCategory = {\n            'id': \"0\",\n            'name': 'Главная',\n            'seoname': '',\n            'link':'/',\n            'cleft': 0,\n            'cright': 100000,\n        };\n    }\n\n    getChain(callback) {\n        if (this.seonamesFromUrl.length == 0) {\n            callback([], [this.mainCategory]);\n\n            return ;\n        }\n\n        let lastSubCat = this.seonamesFromUrl[this.seonamesFromUrl.length-1];\n\n        Api.get('category', {category: {'seoname': lastSubCat}}, (res) => {\n            if (res.data.results.length == 0) {\n                callback([{'error': 'Such category' + lastSubCat + ' not found'}], []);\n\n                return ;\n            }\n\n            this.chainCategories.push(res.data.results[0]);\n\n            this.loadBreadCrumbs(res.data.results[0].parent_id, callback);\n        });\n    }\n\n    loadBreadCrumbs(parentId, callback) {\n        if (parentId == 0) {\n            this.chainCategories = this.chainCategories.reverse();\n\n            if (!this.checkChain() && this.isNeedCheckChain) {\n                callback([{'error': 'Such category not found'}], []);\n\n                return ;\n            }\n\n            let path = '';\n\n            this.chainCategories.map((item) => {\n                path += '/' + item.seoname;\n                item.link = path;\n            });\n\n            this.chainCategories.unshift(this.mainCategory);\n\n            callback([], this.chainCategories);\n\n            return ;\n        }\n\n        Api.get('category', {category: {'id': parentId}}, (res) => {\n            if (res.data.results.length == 0) {\n                callback([{'error': 'Such category not found'}], []);\n\n                return ;\n            }\n\n            this.chainCategories.push(res.data.results[0]);\n\n            this.loadBreadCrumbs(res.data.results[0].parent_id, callback);\n        });\n    }\n\n    checkChain() {\n        for (let i = 0; i < this.seonamesFromUrl.length; i++) {\n            if (this.seonamesFromUrl[i] != this.chainCategories[i]['seoname']) {\n                return false;\n            }\n        }\n\n        return true;\n    }\n}","import React from \"react\";\nimport { Container } from 'react-bootstrap';\nimport { Pagination, PaginationItem, PaginationLink } from 'reactstrap';\nimport { Link } from \"react-router-dom\"\n\nexport default class CustomPagination extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.changePageTo = this.changePageTo.bind(this);\n        this.getPrevLinkToPage = this.getPrevLinkToPage.bind(this);\n        this.getNextLinkToPage = this.getNextLinkToPage.bind(this);\n        this.getLinkToPage = this.getLinkToPage.bind(this);\n\n        this.state = {\n            'showCount': 3,\n            'countOnPage': this.props.countOnPage,\n            'totalCount': this.props.totalCount,\n            'activePage': this.props.activePage,\n            'beforeActivePage': 2,\n            'afterActivePage': 2\n        }\n    }\n\n    changePageTo(page) {\n        this.props.changePageTo(page);\n    }\n\n    getPrevLinkToPage(page) {\n        let prevPage = page - 1;\n\n        if (prevPage < 1) {\n            return this.getLinkToPage(1);\n        }\n\n        return this.getLinkToPage(prevPage);\n    }\n\n    getNextLinkToPage(page) {\n        let nextPage = page + 1;\n\n        if (nextPage > this.props.countPages) {\n            return this.getLinkToPage(this.props.countPages);\n        }\n\n        return this.getLinkToPage(nextPage);\n    }\n\n    getLinkToPage(page) {\n        let urlParams = this.props.location.search.substring(1, this.props.location.search.length);\n        let params = urlParams.split('&');\n        let link = this.props.location.pathname + '?page=' + page;\n        let paramsWithoutPage = params.filter((item) => {\n            let paramName = item.split('=')[0];\n\n            if (paramName == 'page') {\n                return false\n            }\n\n            return true;\n        });\n\n        if (!paramsWithoutPage[0]) {\n            return link;\n        }\n\n        return link + '&' + paramsWithoutPage.join('&');\n    }\n\n    render() {\n        if (this.props.totalCount == 0) {\n            return '';\n        }\n\n        let beforeFromPage = this.props.activePage - this.state.beforeActivePage;\n\n        if(beforeFromPage < 1) {\n            beforeFromPage = 1;\n        }\n\n        let afterToPage = this.props.activePage + this.state.afterActivePage;\n\n        if(afterToPage > this.props.countPages) {\n            afterToPage = this.props.countPages;\n        }\n\n        let pagItems = [];\n        let activePage = this.props.activePage;\n\n        for(let i=beforeFromPage; i<this.props.activePage; i++) {\n            pagItems.push(\n                <PaginationItem key={'page' + i}>\n                    <Link to={this.getLinkToPage(i)} onClick={_ => this.changePageTo(i)}>\n                        <PaginationLink>{i}</PaginationLink>\n                    </Link>\n                </PaginationItem>\n            );\n        }\n\n        pagItems.push(\n            <PaginationItem key='activePage' active>\n                <Link to={this.getLinkToPage(activePage)} onClick={_ => this.changePageTo(activePage)}>\n                    <PaginationLink>\n                        {activePage}\n                    </PaginationLink>\n                </Link>\n            </PaginationItem>\n        );\n\n        for(let i=this.props.activePage+1; i<=afterToPage; i++) {\n            pagItems.push(\n                <PaginationItem key={'page' + i}>\n                    <Link to={this.getLinkToPage(i)} onClick={_ => this.changePageTo(i)}>\n                        <PaginationLink>\n                            {i}\n                        </PaginationLink>\n                    </Link>\n                </PaginationItem>\n            );\n        }\n\n        let lastPage = this.props.countPages;\n\n        return (\n            <Container>\n                <Pagination aria-label=\"Page navigation example\">\n                    <PaginationItem>\n                        <Link to={this.getLinkToPage(1)}  onClick={_ => this.changePageTo(1)}>\n                            {'<<'}\n                        </Link>\n                    </PaginationItem>\n\n                    {/*<PaginationItem>*/}\n                        {/*<Link to={this.getPrevLinkToPage(activePage)} onClick={_ => this.changePageTo(activePage)}>*/}\n                            {/*{'<'}*/}\n                        {/*</Link>*/}\n                    {/*</PaginationItem>*/}\n\n                    {pagItems.map((item) => {\n                        return item;\n                    })}\n\n                    {/*<PaginationItem>*/}\n                        {/*<Link to={this.getNextLinkToPage(activePage)} onClick={_ => this.changePageTo(activePage)}>*/}\n                            {/*{'>'}*/}\n                        {/*</Link>*/}\n                    {/*</PaginationItem>*/}\n\n                    <PaginationItem>\n                        <Link to={this.getLinkToPage(lastPage)} onClick={_ => this.changePageTo(lastPage)}>\n                            {'>>'}\n                        </Link>\n                    </PaginationItem>\n                </Pagination>\n            </Container>\n        );\n    }\n}\n\n","import React from \"react\";\nimport queryString from \"query-string\";\nimport {Container} from \"react-bootstrap\";\nimport Pagination from \"../../components/Pagination\";\n\nclass DataList extends React.Component {\n    render() {\n        let defaultCountOnPage = 10;\n        let countOnPage = this.props.countOnPage ? this.props.countOnPage : defaultCountOnPage;\n        let countPages = Math.ceil(this.props.totalCount / countOnPage);\n\n        return (\n            <Container>\n                {this.props.children}\n                <Pagination\n                    location={this.props.location}\n                    totalCount={this.props.totalCount}\n                    changePageTo={this.props.changePageTo}\n                    activePage={this.props.activePage}\n                    countPages={countPages}\n                    countOnPage={countOnPage}\n                />\n            </Container>\n        );\n    }\n}\n\nexport default DataList;\n\n","import React, { Component } from \"react\";\nimport Api from \"../cutrayApi/Api\";\nimport {connect} from \"react-redux\";\nimport NotFound from '../containers/NotFound';\nimport Navigation from '../containers/Navigation';\nimport ItemList from '../containers/Item/ItemList';\nimport BreadCrumbsContainer from '../containers/BreadCrumbs';\nimport BreadCrumbs from '../breadCrumbs/BreadCrumbs';\nimport DataList from    '../containers/List/DataList';\nimport queryString from \"query-string\";\n\nclass List extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            isNotFound: false,\n            breadCrumbsParts: [],\n            seonamesFromUrl: [],\n            chainSeonames: [],\n            page: this.getActivePage(this.props.location)\n        };\n\n        this.changePageTo     = this.changePageTo.bind(this);\n        this.loadProducts     = this.loadProducts.bind(this);\n        this.loadCategories   = this.loadCategories.bind(this);\n        this.getActivePage    = this.getActivePage.bind(this);\n        this.getMenu          = this.getMenu.bind(this);\n        this.getProducts      = this.getProducts.bind(this);\n        this.isInCart         = this.isInCart.bind(this);\n        this.isFavourite      = this.isFavourite.bind(this);\n        this.onBasketClick    = this.onBasketClick.bind(this);\n        this.onFavouriteClick = this.onFavouriteClick.bind(this);\n\n        this.init();\n    }\n\n    init() {\n        let breadCrumbs = new BreadCrumbs(this.props.match.params);\n        let callback = (err, chain) => {\n            if (err.length != 0) {\n                this.setState(Object.assign(this.state, {isNotFound:true}));\n\n                return ;\n            }\n\n            let lastCategory = chain[chain.length-1];\n\n            this.props.updateBreadCrumbs(chain);\n            this.props.updateCurrentCategory(lastCategory);\n\n            let data =  {\n                category: {\n                    'cleft': lastCategory.cleft,\n                    'cright': lastCategory.cright,\n                }\n            };\n\n            Api.get('category', data, (response) => {\n                let ids = [lastCategory.id];\n\n                response.data.results.map((item) => { ids.push(item.id); });\n\n                let currentCategory = Object.assign(lastCategory, {'childIds': ids});\n\n                this.props.updateCurrentCategory(currentCategory);\n\n                this.loadProducts();\n            });\n\n            this.loadCategories(lastCategory.id);\n        };\n\n        breadCrumbs.getChain(callback);\n    }\n\n    loadCategories(catId) {\n        Api.get('category', {category: {'parent_id': catId}}, (res) => {\n            if (res.data.results.length == 0) {\n                this.props.updateCategories([]);\n\n                return ;\n            }\n\n            let categories = res.data.results;\n            let pathname = this.props.location.pathname == '/' ? '' : this.props.location.pathname;\n\n            categories.map((item) => {\n                item.link = pathname + '/' + item.seoname;\n            });\n\n            this.props.updateCategories(res.data.results);\n        });\n    }\n\n    loadProducts() {\n        let productQueryParams = {\n            product: {\n                category_ids: this.props.currentCategory.childIds,\n                page: this.state.page\n            }\n        };\n\n        if (this.props.searchValue) {\n            productQueryParams.product.name = this.props.searchValue;\n        }\n\n        Api.get('product', productQueryParams, (response) => {\n            this.props.updateData(response.data);\n        });\n    }\n\n    getActivePage(location) {\n        let params = queryString.parse(location.search);\n\n        return params.page != undefined ? parseInt(params.page) : 1;\n    }\n\n    changePageTo(page) {\n        this.setState(Object.assign(this.state, {'page': page}));\n\n        this.loadProducts();\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (this.props.isSearch) {\n            this.loadProducts();\n\n            this.props.updateIsSearch(false);\n        }\n\n\n        if (prevProps.location.pathname != this.props.location.pathname) {\n            this.setState(Object.assign(this.state, {'page': 1}));\n\n            this.init();\n        }\n    }\n\n    onBasketClick(productId) {\n        if (this.isInCart(productId)) {\n            this.props.deleteProductFromCart(productId);\n        } else {\n            this.props.addProductToCart(productId);\n        }\n\n        this.forceUpdate();\n    }\n\n    onFavouriteClick(productId) {\n        if (this.isFavourite(productId)) {\n            this.props.deleteProductFromFavourite(productId);\n        } else {\n            this.props.addProductToFavourite(productId);\n        }\n\n        this.forceUpdate();\n    }\n\n    isFavourite(productId) {\n        let favourites = this.props.favourites.filter(item => productId == item.id);\n        let isItemFavourite = !!favourites.length;\n\n        return isItemFavourite;\n    }\n\n    isInCart(productId) {\n        let productsInCart = this.props.productsInCart.filter(item => productId == item.id);\n        let isInCart = !!productsInCart.length;\n\n        return isInCart;\n    }\n\n    getMenu() {\n        return (\n            <div className={'catalog__menu'}>\n                <Navigation\n                    navigationName={'Категории'}\n                    items={this.props.categories}\n                    onLinkClick={() => {this.props.updateSearchValue('')}}\n                />\n            </div>\n        );\n    }\n\n    getProducts() {\n        if (this.props.products.length == 0) {\n            return (\n                <div className={'catalog__items text-left'}>\n                    <h2>По Вашему запросу товары не найдены</h2>\n                </div>\n            );\n        }\n\n        return (\n            <div className={'catalog__items'}>\n                <DataList\n                    location={this.props.location}\n                    changePageTo={this.changePageTo}\n                    totalCount={this.props.totalCount}\n                    activePage={this.state.page}\n                >\n                    {this.props.products.map((item, key) => {\n                        return (\n                            <ItemList\n                                key={key}\n                                id={item.id}\n                                name={item.name}\n                                vendor={item.vendor}\n                                price={item.price}\n                                imgPaths={item.img_paths}\n                                isInCart={this.isInCart(item.id)}\n                                isFavourite={this.isFavourite(item.id)}\n                                onBasketClick={this.onBasketClick}\n                                onFavouriteClick={this.onFavouriteClick}\n                            />\n                        );\n                    })}\n                </DataList>\n            </div>\n        );\n    }\n\n    render () {\n        if (this.state.isNotFound) {\n            return (\n                <NotFound />\n            );\n        }\n\n        return (\n            <div className=\"wrapper wrapper__border-top wrapper__padding-footer\">\n                <BreadCrumbsContainer\n                    values={this.props.breadCrumbs}\n                    onLinkClick={() => {this.props.updateSearchValue('')}}\n                />\n                <div className={'catalog'}>\n                    {this.getMenu()}\n\n                    {this.getProducts()}\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default connect(\n    state =>  ({\n        searchValue:     state.header.searchValue,\n        isSearch:        state.header.isSearch,\n\n        favourites:       state.favourite.products,\n        productsInCart:   state.cart.products,\n\n        source:          state.list.source,\n        isNeedSearch:    state.list.isNeedSearch,\n        products:        state.list.data,\n        totalCount:      state.list.totalCount,\n        currentCategory: state.list.currentCategory,\n        breadCrumbs:     state.list.breadCrumbs,\n        categories:      state.list.categories\n    }),\n    dispatch => ({\n        updateData: (data) => {\n            dispatch({ type: 'LIST_UPDATE_DATA', data: data})\n        },\n        updateBreadCrumbs: (breadCrumbs) => {\n            dispatch({ type: 'LIST_UPDATE_BEADCRUMBS', data: {breadCrumbs: breadCrumbs}})\n        },\n        updateCategories: (categories) => {\n            dispatch({ type: 'LIST_UPDATE_CATEGORIES', data: {categories: categories}})\n        },\n        updateCurrentCategory: (currentCategory) => {\n            dispatch({ type: 'LIST_UPDATE_CURRENT_CATEGORY', data: {'currentCategory': currentCategory}});\n        },\n        updateIsSearch: (isSearch) => {\n            dispatch({ type: 'HEADER_UPDATE_IS_SEARCH', data: {'isSearch': isSearch}});\n        },\n\n        addProductToCart: (id) => {\n            dispatch({ type: 'CART_ADD_PRODUCT', data: {id: id}});\n        },\n        deleteProductFromCart: (id) => {\n            dispatch({ type: 'CART_DELETE_PRODUCT', data: {id: id}});\n        },\n\n        addProductToFavourite: (id) => {\n            dispatch({ type: 'FAVOURITE_ADD_PRODUCT', data: {id: id}});\n        },\n        deleteProductFromFavourite: (id) => {\n            dispatch({ type: 'FAVOURITE_DELETE_PRODUCT', data: {id: id}});\n        },\n\n        updateSearchValue: (searchValue) => {\n            dispatch({ type: 'HEADER_UPDATE_SEARCH_VALUE', data: {searchValue: searchValue}})\n        },\n    })\n)(List);","import React, { Component } from \"react\";\nimport {Container} from \"react-bootstrap\";\n\nclass Index extends Component {\n    render () {\n        return (\n            <Container>\n                <h4 className=\"p-3\">Добро пожаловать в панель управления.</h4>\n\n                <ul>\n                    <li className={'p-2'}>\n                        <a href=\"/backoffice/product\">Товары</a>\n                    </li>\n                    <li className={'p-2'}>\n                        <a href=\"/backoffice/category\">Категории</a>\n                    </li>\n                    <li className={'p-2'}>\n                        <a href=\"/backoffice/order\">Заказы</a>\n                    </li>\n                </ul>\n            </Container>\n        );\n    }\n}\n\nexport default Index;","class AccessManager {\n    check (allowRoles, userRoles) {\n        let arr = allowRoles.filter((item) => {\n            return userRoles.indexOf(item) != -1;\n        });\n\n        return !!arr.length;\n    }\n}\n\nexport default AccessManager;","import React from \"react\";\nimport queryString from \"query-string\";\nimport Api from \"../../cutrayApi/Api\";\nimport AccessManager from \"../../accessManager/AccessManager\";\n\nexport default class BasePage extends React.Component{\n    getPage() {\n        let params = queryString.parse(this.props.location.search);\n        let page = params.page != undefined ? params.page : 1;\n\n        return parseInt(page);\n    }\n\n    getList(data, callback) {\n        data.token = this.props.token;\n\n        Api.get(this.props.source, data, callback);\n    }\n\n    onSave(source, data, callback) {\n        data.token = this.props.token;\n\n        Api.add(source, data, callback);\n    }\n\n    getSource() {\n        return this.props.source;\n    }\n\n    checkAccess(userRoles) {\n        let allowRoles = ['ROLE_ADMIN'];\n\n        let accessManager = new AccessManager();\n\n        return accessManager.check(allowRoles, userRoles);\n    }\n}","import BasePage from \"./BasePage\";\nimport {Button, Col, Row} from \"react-bootstrap\";\nimport React from \"react\";\n\nexport default class BaseList extends BasePage {\n    constructor(props) {\n        super(props);\n\n        this.moveToCreate = this.moveToCreate.bind(this);\n        this.getListHeader = this.getListHeader.bind(this);\n    }\n\n    getListHeader() {\n        return (\n            <Row>\n                <Col>\n                    <h2 className=\"m-2\">{this.props.label}</h2>\n                </Col>\n                <Col>\n                    <Button className=\"m-2 float-right\" onClick={this.moveToCreate}>Добавить</Button>\n                </Col>\n            </Row>\n        )\n    }\n\n    moveToCreate() {\n        window.location = this.props.location.pathname + '/add';\n    }\n\n\n}","import React from \"react\";\nimport { Container, Button } from 'react-bootstrap';\nimport { Table, Thead, Tbody, Tr, Th, Td } from \"react-super-responsive-table\"\nimport \"react-super-responsive-table/dist/SuperResponsiveTableStyle.css\"\nimport EditIcon from 'react-icons/lib/md/edit'\nimport RemoveIcon from 'react-icons/lib/md/clear'\nimport Pagination from 'components/Pagination'\nimport Image from 'containers/List/Column/Image'\nimport Api from \"../cutrayApi/Api\";\n\nexport default class List extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.changePageTo = this.changePageTo.bind(this);\n        this.getCountPages = this.getCountPages.bind(this);\n        this.getEditLink = this.getEditLink.bind(this);\n        this.getTableBody = this.getTableBody.bind(this);\n\n        let countOnPage = 10;\n\n        this.state = {\n            countOnPage: countOnPage,\n            countPages: Math.ceil(this.props.totalCount / countOnPage),\n            totalCount: this.props.totalCount,\n            activePage: this.props.activePage,\n        }\n    }\n\n    getCountPages() {\n        return Math.ceil(this.props.totalCount / this.state.countOnPage);\n    }\n\n    getEditLink(id) {\n        return this.props.location.pathname + '/edit/' + id;\n    }\n\n    onDelete(id) {\n        let source = this.props.source;\n        let params = {\n            token: this.props.token,\n            [this.props.source]: [{id:id}]\n        };\n\n        Api.delete(source, params,() => {\n            this.props.updateList({\n                [this.props.source]: {\n                    'page': this.props.activePage\n                }\n            });\n\n            this.setState(Object.assign(this.state, {\n                countPages: Math.ceil(this.props.totalCount / this.state.countOnPage)\n            }));\n\n            this.forceUpdate();\n        });\n    }\n\n    updateList(params) {\n        this.props.updateList(params);\n    }\n\n    changePageTo(page) {\n        this.props.updateList({\n            [this.props.source]: {'page': page}\n        });\n    }\n\n    getRenderNotFound() {\n        return (\n            <div>\n                <hr/>\n                <h5 className='p-3'>Данных нет</h5>\n                <hr/>\n            </div>\n        );\n    }\n\n    getTableHeader() {\n        return (\n            <Thead>\n                <Tr className=\"list-border\">\n                    {this.props.columns.map((obj, key) => {\n                        return <Th key={key}>{obj.label}</Th>\n                    })}\n\n                    <Th>Действия</Th>\n                </Tr>\n            </Thead>\n        );\n    }\n\n    getTableBody() {\n        let data    = this.props.data;\n        let columns = this.props.columns;\n\n        return (\n            <Tbody>\n            {data.map((obj, key) => {\n                return (\n                    <Tr className=\"list-border\" key={key}>\n                        {columns.map((column, columnKey) => {\n                            if (column.type == 'image') {\n                                return (\n                                    <Td key={columnKey}>\n                                        <Image imgPaths={obj.img_paths} className={'images-list'}/>\n                                    </Td>\n                                );\n                            }\n\n                            return <Td key={columnKey}>{obj[column.name]}</Td>\n                        })}\n\n                        <Td align=\"left\">\n                            <a href={this.getEditLink(obj.id)}>\n                                <Button variant=\"link\"><EditIcon key='beer' /></Button>\n                            </a>\n                            <Button onClick={() => {this.onDelete(obj.id)}} variant=\"link\"><RemoveIcon key='beer' /></Button>\n                        </Td>\n                    </Tr>\n                )\n            })}\n            </Tbody>\n        );\n    }\n\n    render() {\n        let data = this.props.data;\n\n        if (!data || !data.length) {\n            return this.getRenderNotFound();\n        }\n\n        return (\n            <Container>\n                <Table>\n                    {this.getTableHeader()}\n\n                    {this.getTableBody()}\n                </Table>\n\n                <Pagination\n                    location={this.props.location}\n                    activePage={this.props.activePage}\n                    totalCount={this.props.totalCount}\n                    countOnPage={this.state.countOnPage}\n                    countPages={this.getCountPages()}\n                    changePageTo={this.changePageTo}\n                />\n\n            </Container>\n        );\n    }\n}\n\n","import React from \"react\";\nimport { connect } from 'react-redux';\nimport { Container } from 'react-bootstrap';\nimport BaseList from '../BaseList';\nimport List from '../../../components/List';\nimport { Redirect } from 'react-router-dom';\n\nclass ProductList extends BaseList {\n    constructor(props) {\n        super(props);\n\n        this.updateList = this.updateList.bind(this);\n    }\n\n    componentDidMount() {\n        this.updateList({\n            [this.props.source]: {'page': this.getPage()}\n        });\n    }\n\n    updateList(params) {\n        this.getList(params, (response) => {\n            this.props.setProducts(response.data);\n        });\n    }\n\n    render() {\n        if (!this.checkAccess(this.props.userRoles)) {\n            return <Redirect to={'/'} />;\n        }\n\n        return (\n            <Container>\n                {this.getListHeader()}\n\n                <List\n                    token={this.props.token}\n                    location={this.props.location}\n                    columns={this.props.showedColumns}\n                    data={this.props.data}\n                    totalCount={this.props.totalCount}\n                    activePage={this.getPage()}\n                    source={this.props.source}\n                    updateList={this.updateList}\n                />\n            </Container>\n        );\n    }\n}\n\nexport default connect(\n    state =>  ({\n        token: state.profile.token,\n        userRoles: state.profile.userRoles,\n        source: state.product.source,\n        data: state.product.data,\n        label: state.product.label,\n        editFields: state.product.editFields,\n        totalCount: state.product.totalCount,\n        showedColumns: state.product.showedColumns\n    }),\n    dispatch => ({\n        setProducts: (data) => {\n            dispatch({ type: 'PRODUCT_SET', data: data});\n        },\n        setPage: (page) => {\n            dispatch({ type: 'PRODUCT_PAGE_SET', page: page});\n        }\n    })\n)(ProductList);\n","import React from \"react\";\nimport { Input } from 'reactstrap';\nimport Api from '../../cutrayApi/Api'\n\nclass ParentCategory extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.onChange = this.onChange.bind(this);\n        this.initCategory = this.initCategory.bind(this);\n        this.getCategory = this.getCategory.bind(this);\n        this.getParentCallback = this.getParentCallback.bind(this);\n        this.removeChildrenBehindFrom = this.removeChildrenBehindFrom.bind(this);\n\n        this.state = {\n            'categories': [],\n            'isInit': false,\n            'isLoading': true,\n            'afterInit': () => {},\n            'initCategoryId': this.props.id\n        };\n\n        this.initCategory(0);\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (this.state.isInit || !this.props.id) {\n            return ;\n        }\n\n        this.setState(Object.assign(this.state, {isInit:true}));\n\n        if (this.state.isLoading) {\n            this.setState(Object.assign(this.state, {afterInit: () => {\n                this.removeChildrenBehindFrom(0);\n                this.initCategory(this.props.id);\n            }}));\n        } else {\n            this.removeChildrenBehindFrom(0);\n            this.initCategory(this.props.id);\n        }\n    }\n\n    initCategory(id) {\n        let callback = (response) => {\n            let data = response.data;\n\n            if (!data.results.length || this.state.categories.length == 5) {\n                return ;\n            }\n\n            let selectedId = this.state.selectedId == undefined ? this.props.id : this.state.selectedId;\n            let results = data.results.filter(value => value.id != this.props.fadeCategoryId);\n\n            this.setState(Object.assign(this.state, {\n                'categories':[{'childs': results, 'selectedId': selectedId}, ...this.state.categories],\n                'selectedId': data.results[0]['parent_id'],\n                'isLoading': false\n            }));\n\n            if(this.state.afterInit) {\n                this.state.afterInit();\n\n                Object.assign(this.state, {'afterInit': false});\n            }\n\n            if (data.results[0]['parent_id'] == 0) {\n                if (!this.props.isLastSelected) {\n                    let newState = Object.assign({}, this.state);\n\n                    newState.categories[newState.categories.length-1].selectedId = 0;\n\n                    this.setState(newState);\n                }\n\n                return ;\n            }\n\n            this.getCategory(data.results[0]['parent_id'], (response) => {\n                let data = response.data;\n                this.getParentCategories(data.results[0]['parent_id'], callback);\n            });\n        }\n\n        if (id == 0) {\n            return this.getParentCategories(id, callback);\n        }\n\n        this.getCategory(id, (response) => {\n            let data = response.data;\n\n            if(!data.results.length) {\n                this.getParentCategories(0, callback);\n\n                return ;\n            }\n\n            this.getParentCategories(id, callback);\n        });\n    }\n\n    getParentCallback(response) {\n        let data = response.data;\n\n        if (!data.results.length) {\n            return ;\n        }\n\n        let newState = Object.assign({}, this.state);\n        let results = data.results.filter(value => value.id != this.props.fadeCategoryId);\n\n        newState.categories[newState.categories.length] = {'childs': results};\n        newState.isLoading = false;\n\n        this.setState(newState);\n    }\n\n    getParentCategories(parent_id, callback) {\n        var params = {\n            'category': {\n                'parent_id': parent_id,\n                'countOnPage': 100\n            }\n        };\n\n        Api.get('category', params, callback);\n    }\n\n    getCategory(id, callback) {\n        Api.get('category', {'category': {'id': id}}, callback);\n    }\n\n    removeChildrenBehindFrom(value) {\n        let newState = Object.assign({}, this.state);\n\n        newState.categories = newState.categories.slice(0, value);\n\n        this.setState(newState);\n    }\n\n    onChange(e) {\n        let id = parseInt(e.target.id);\n        let newState = Object.assign({}, this.state);\n\n        newState.isLoading = false;\n        newState.categories[id].selectedId = parseInt(e.target.value);\n\n        this.setState(newState);\n\n        this.setState(Object.assign(this.state, {isInit: true}));\n\n        this.removeChildrenBehindFrom(id + 1);\n\n        if (e.target.value == -1 || e.target.value == 0) {\n            return ;\n        }\n\n        this.getParentCategories(e.target.value, this.getParentCallback);\n\n        this.props.onChange(this.props.name, e.target.value);\n    }\n\n    render() {\n        return (\n            <div>\n                {this.state.categories.map((item, key) => {\n                    return (\n                        <Input key={key}\n                               type=\"select\"\n                               value={item.selectedId}\n                               name={this.props.name}\n                               id={key}\n                               className=\"mt-2 mb-3\"\n                               onMouseDown={this.init}\n                               onChange={this.onChange}>\n                            <option key={-1} value='0'>Не выбрано</option>\n                            {item.childs.map((childCategory, keyChildCategory) => {\n                                return (\n                                    <option key={keyChildCategory} value={childCategory.id}>{childCategory.name}</option>\n                                )\n                            })}\n                        </Input>\n                    )\n                })}\n            </div>\n        );\n    }\n}\n\nexport default ParentCategory;\n","import React from \"react\";\nimport {Button, Container} from 'react-bootstrap';\nimport Modal from 'react-bootstrap/Modal';\nimport Form from 'react-bootstrap/Form';\nimport MdControlPoint from 'react-icons/lib/md/control-point'\nimport {Table, Thead, Tbody, Th, Tr, Td} from \"react-super-responsive-table\";\nimport Pagination from './Pagination'\nimport Api from '../cutrayApi/Api';\n\nexport default class SelectWindow extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            'page': 1,\n            'title': this.props.title,\n            'source': this.props.source,\n            'searchFields': this.props.searchFields,\n            'searchedData': [],\n            'totalCount': 0\n        };\n\n        this.loadPage();\n    }\n\n    loadPage() {\n        let data = {\n            token: this.props.token\n        };\n        let params = {page: this.state.page};\n\n        this.state.searchFields.map((item) => {\n            return item.value ? params[item.name] = item.value : '';\n        });\n\n        data[this.state.source] = params;\n\n        Api.get(this.state.source, data, (response) => {\n            let data = response.data;\n\n            this.setState(Object.assign(this.state, {\n                'searchedData': data.results,\n                'totalCount': data.totalCount\n            }));\n        });\n    }\n\n    updateSearchField(name, value) {\n        let searchFields = Object.assign(this.state.searchFields, {});\n\n        searchFields.map((item) => {\n            return item.name == name ? item.value = value : '';\n        });\n\n        this.setState(Object.assign(this.state, {'searchFields': searchFields}));\n        this.loadPage();\n    }\n\n    changePageTo(page) {\n        this.setState(Object.assign(this.state, {'page': page}));\n        this.loadPage();\n    }\n\n    getList() {\n        return <Table>\n            <Thead>\n                <Tr>\n                    {this.state.searchFields.map((item, key) => {\n                        return <Th key={key}>{item.label}</Th>\n                    })}\n                    <Th key='select'></Th>\n                </Tr>\n            </Thead>\n            <Tbody>\n            {this.state.searchedData.map((item, key) => {\n                 return (\n                     <Tr className=\"list-border\" key={key}>\n                         {this.state.searchFields.map((field, fieldKey) => {\n                             return (\n                                 <Td key={fieldKey}>\n                                     {item[field.name]}\n                                 </Td>\n                             )\n                         })}\n                         <Td key='select'>\n                             <Button variant=\"link\" onClick={() => {\n                                 this.props.onSelect(item.id);\n                                 this.props.toogleWindow();\n                             }} >\n                                 <MdControlPoint />\n                             </Button>\n                         </Td>\n                     </Tr>\n                 )\n             })}\n            </Tbody>\n        </Table>\n    }\n\n    render() {\n        return (\n            <Container>\n                <Modal\n                    size=\"lg\"\n                    show={this.props.isWindowOpen()}\n                    onHide={this.props.toogleWindow}\n                    aria-labelledby=\"example-modal-sizes-title-lg\"\n                >\n                    <Modal.Header closeButton>\n                        <Modal.Title id=\"example-modal-sizes-title-lg\">\n                            {this.state.title}\n                        </Modal.Title>\n                    </Modal.Header>\n                    <Modal.Body>\n                        {this.state.searchFields.map((item, key) => {\n                            return (\n                                <Container key={key} className=\"pb-3\">\n                                    {item.label}\n                                    <Form.Control\n                                        key={key}\n                                        name={item.name}\n                                        onChange={(e) => {this.updateSearchField(item.name, e.target.value)}}\n                                        as=\"input\" />\n                                </Container>\n                            )\n                        })}\n                        <hr/>\n\n                        {this.getList()}\n\n                        <Pagination\n                            location={this.props.location}\n                            activePage={1}\n                            totalCount={this.state.totalCount}\n                            countOnPage={10}\n                            countPages={Math.ceil(this.state.totalCount/10)}\n                            changePageTo={(page) => this.changePageTo(page)} />\n                    </Modal.Body>\n                </Modal>\n            </Container>\n        );\n    }\n}\n\n","import React from \"react\";\nimport Container from \"react-bootstrap/Container\";\nimport Button from 'react-bootstrap/Button';\n\nimport SelectWindow from '../../components/SelectWindow';\nimport Api from '../../cutrayApi/Api';\n\nclass UserSelect extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            'isSelect': !!this.props.id ,\n            'isSelectWindowOpen': false,\n            'titleSelectWindow': 'Выбор клиента',\n            'selectWindowSource': 'user',\n            'searchFieldsSelectWindow': [\n                {\n                    'label': 'Id',\n                    'name': 'id',\n                    'value': '',\n                },\n                {\n                    'label': 'Email',\n                    'name': 'email',\n                    'value': ''\n                }\n            ],\n            'user': {\n                'id': 0,\n                'email': ''\n            },\n            'value': '',\n        };\n\n        this.getUserById = this.getUserById.bind(this);\n        this.isWindowOpen = this.isWindowOpen.bind(this);\n        this.toogleWindow = this.toogleWindow.bind(this);\n        this.onChange = this.onChange.bind(this)\n    }\n\n    componentDidMount() {\n        this.getUserById(this.props.id);\n    }\n\n    getUserById(id) {\n        let data = {\n            token: this.props.token,\n            user: {\n                id: id\n            }\n        };\n        Api.get('user', data, (response) => {\n            let data = response.data;\n\n            if (data.results.length) {\n                this.setState(Object.assign(this.state, {\n                    'isSelected': true,\n                    'user': {\n                        id: data.results[0].id,\n                        email: data.results[0].email\n                    }\n                }));\n            }\n        });\n    }\n\n    toogleWindow() {\n        this.setState(Object.assign(this.state, {\n            'isSelectWindowOpen': !this.state.isSelectWindowOpen\n        }));\n    }\n\n    isWindowOpen() {\n        return this.state.isSelectWindowOpen;\n    }\n\n    onChange(selectedId) {\n        this.props.onChange(this.props.name, selectedId);\n        this.getUserById(selectedId);\n    }\n\n    render() {\n        return (\n            <Container>\n                <Button onClick={this.toogleWindow} >\n                    {this.state.user.id ? \"Изменить\" : \"Не выбрано\"}\n                </Button>\n                <div className={'inline ml-3'}>{this.state.user.email}</div>\n                <SelectWindow\n                    token={this.props.token}\n                    isWindowOpen={this.isWindowOpen}\n                    toogleWindow={this.toogleWindow}\n                    location={this.props.location}\n                    title={this.state.titleSelectWindow}\n                    source={this.state.selectWindowSource}\n                    onSelect={this.onChange}\n                    searchFields={this.state.searchFieldsSelectWindow}\n                />\n            </Container>\n        );\n    }\n}\n\nexport default UserSelect;\n","import React from \"react\";\nimport { Button, Form, FormGroup, Label, Input, FormText } from 'reactstrap';\nimport api from '../../cutrayApi/Api'\n\nclass Category extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.onChange = this.onChange.bind(this);\n        this.initCategory = this.initCategory.bind(this);\n        this.getCategory = this.getCategory.bind(this);\n        this.getParentCallback = this.getParentCallback.bind(this);\n        this.removeChildrenBehindFrom = this.removeChildrenBehindFrom.bind(this);\n\n        this.state = {\n            'categories': [],\n            'isInit': false,\n            'isLoading': true,\n            'afterInit': () => {},\n            'initCategoryId': this.props.id\n        };\n\n        this.initCategory(0);\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (this.state.isInit || !this.props.id) {\n            return ;\n        }\n\n        this.setState(Object.assign(this.state, {isInit:true}));\n\n        if (this.state.isLoading) {\n            this.setState(Object.assign(this.state, {afterInit: () => {\n                    this.removeChildrenBehindFrom(0);\n                    this.initCategory(this.props.id);\n                }}));\n        } else {\n            this.removeChildrenBehindFrom(0);\n            this.initCategory(this.props.id);\n        }\n    }\n\n    initCategory(id) {\n        let callback = (response) => {\n            let data = response.data;\n\n            if (!data.results.length || this.state.categories.length == 5) {\n                return ;\n            }\n\n            let selectedId = this.state.selectedId;\n\n            data.results.map((value) => {\n                if (value.id == this.props.id) {\n                    selectedId = this.props.id;\n                }\n            });\n\n\n            let results = data.results.filter(value => value.id != this.props.fadeCategoryId);\n\n            this.setState(Object.assign(this.state, {\n                'categories':[{'childs': results, 'selectedId': selectedId}, ...this.state.categories],\n                'selectedId': data.results[0]['parent_id'],\n                'isLoading': false\n            }));\n\n            if(this.state.afterInit) {\n                this.state.afterInit();\n\n                Object.assign(this.state, {'afterInit': false});\n            }\n\n            if (data.results[0]['parent_id'] == 0) {\n                return ;\n            }\n\n            this.getCategory(data.results[0]['parent_id'], (response) => {\n                let data = response.data;\n                this.getParentCategories(data.results[0]['parent_id'], callback);\n            });\n        }\n\n        if (id == 0) {\n            return this.getParentCategories(id, callback);\n        }\n\n        this.getCategory(id, (response) => {\n            let data = response.data;\n\n            if(!data.results.length) {\n                this.getParentCategories(0, callback);\n\n                return ;\n            }\n\n            this.getParentCategories(data.results[0]['parent_id'], callback);\n        });\n    }\n\n    getParentCallback(response) {\n        let data = response.data;\n\n        if (!data.results.length) {\n            return ;\n        }\n\n        let newState = Object.assign({}, this.state);\n        let results = data.results.filter(value => value.id != this.props.fadeCategoryId);\n\n        newState.categories[newState.categories.length] = {'childs': results};\n        newState.isLoading = false;\n\n        this.setState(newState);\n    }\n\n    getParentCategories(parent_id, callback) {\n        var params = {\n            'category': {\n                'parent_id': parent_id,\n                'countOnPage': 100\n            }\n        };\n\n        api.get('category', params, callback);\n    }\n\n    getCategory(id, callback) {\n        api.get('category', {'category': {'id': id}}, callback);\n    }\n\n    removeChildrenBehindFrom(value) {\n        let newState = Object.assign({}, this.state);\n\n        newState.categories = newState.categories.slice(0, value);\n\n        this.setState(newState);\n    }\n\n    onChange(e) {\n        let id = parseInt(e.target.id);\n        let newState = Object.assign({}, this.state);\n\n        newState.isLoading = false;\n        newState.categories[id].selectedId = parseInt(e.target.value);\n\n        this.setState(newState);\n\n        this.setState(Object.assign(this.state, {isInit: true}));\n\n        this.removeChildrenBehindFrom(id + 1);\n\n        if (e.target.value == -1 || e.target.value == 0) {\n            return ;\n        }\n\n        this.getParentCategories(e.target.value, this.getParentCallback);\n\n        this.props.onChange(this.props.name, e.target.value);\n    }\n\n    render() {\n        return (\n            <div>\n                {this.state.categories.map((item, key) => {\n                    return (\n                        <Input key={key}\n                               type=\"select\"\n                               value={item.selectedId}\n                               name={this.props.name}\n                               id={key}\n                               className=\"mt-2 mb-3\"\n                               onMouseDown={this.init}\n                               onChange={this.onChange}>\n                            <option key={-1} value='0'>Не выбрано</option>\n                            {item.childs.map((childCategory, keyChildCategory) => {\n                                return (\n                                    <option key={keyChildCategory} value={childCategory.id}>{childCategory.name}</option>\n                                )\n                            })}\n                        </Input>\n                    )\n                })}\n            </div>\n        );\n    }\n}\n\nexport default Category;\n","import React from \"react\";\nimport { Table, Thead, Tbody, Tr, Th, Td } from \"react-super-responsive-table\"\nimport RemoveIcon from 'react-icons/lib/md/clear'\nimport Button from 'react-bootstrap/Button';\n\nimport Image from 'containers/List/Column/Image';\n\nclass ItemsList extends React.Component {\n    getTableHeader() {\n        if (!this.props.headers) {\n            return '';\n        }\n\n        return (\n            <Thead>\n                <Tr>\n                    {this.props.headers.map((item, key) => {\n                        return <Th key={key}>{item.label}</Th>\n                    })}\n                </Tr>\n            </Thead>\n        );\n    }\n\n    getItemContent(headerItem, item) {\n        if (headerItem.type == 'count') {\n            return (\n                <div>\n                    <div className={'triangle-left'} onClick={() => {headerItem.action('reduce', item.id)}}></div>\n                    <div className={'p-3 d-inline-block justify-content-center'}>{item[headerItem.name]}</div>\n                    <div className={'triangle-right'} onClick={() => {headerItem.action('increase', item.id)}}></div>\n                </div>\n            )\n        }\n\n        if (headerItem.type == 'image') {\n            return <Image className={'img-list'} imgPaths={item[headerItem.name]}/>\n        }\n\n        return <div>{item[headerItem.name]}</div>;\n    }\n\n    getLine(item, lineKey) {\n        return (\n            <Tr key={lineKey}>\n                {this.props.headers.map((headerItem, key) => {\n                    return <Td key={key}>\n                        {this.getItemContent(headerItem, item)}\n                    </Td>\n                })}\n                <Td key='actions'>\n                {this.props.actions.map((actionItem, key) => {\n                    if (actionItem.actionName == 'delete') {\n                        return (\n                            <Button key={key} onClick={() => {actionItem.action(item.id)}} variant=\"link\">\n                                <RemoveIcon key='beer' />\n                            </Button>\n                        )\n                    }\n                })}\n                </Td>\n            </Tr>\n        )\n    }\n\n    render() {\n        return (\n            <Table>\n                {this.getTableHeader()}\n\n                <Tbody>\n                    {this.props.body.map((item, key) => {\n                        return this.getLine(item, key);\n                    })}\n                </Tbody>\n            </Table>\n        );\n    }\n}\n\nexport default ItemsList;","import React from \"react\";\nimport Button from 'react-bootstrap/Button';\nimport SelectWindow from '../../components/SelectWindow';\nimport ItemsList from \"../../containers/ItemsList\";\nimport Api from \"../../cutrayApi/Api\";\nimport PropTypes from 'prop-types';\n\nclass Order extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            'isSelectWindowOpen': false,\n            'titleSelectWindow': 'Выбор товара',\n            'selectWindowSource': 'product',\n            'searchFieldsSelectWindow': [\n                {\n                    'label': 'Id',\n                    'name': 'id',\n                    'value': ''\n                },\n                {\n                    'label': 'Имя',\n                    'name': 'name',\n                    'value': ''\n                },\n                {\n                    'label': 'Aртикул',\n                    'name': 'vendor',\n                    'value': ''\n                }\n            ],\n            'productHeaders': [\n                {\n                    'label': 'Id',\n                    'name': 'id'\n                },\n                {\n                    'label': 'Изображение',\n                    'name': 'img_paths',\n                    'type': 'image',\n                },\n                {\n                    'label': 'Название',\n                    'name': 'name',\n                },\n                {\n                    'label': 'Кол-во',\n                    'name': 'count',\n                    'type': 'count',\n                    'action': this.countAction.bind(this)\n\n                },\n                {\n                    'label': 'Цена за штуку',\n                    'name': 'price'\n                }\n            ],\n            'productsData': [],\n            'productActions': [\n                {\n                    'actionName': 'delete',\n                    'action': (id) => {\n                        this.onDelete(id)\n                    }\n                }\n            ]\n        };\n\n        if (this.props.productActions) {\n            this.state.productActions = this.props.productActions;\n        }\n\n        this.isWindowOpen = this.isWindowOpen.bind(this);\n        this.toogleWindow = this.toogleWindow.bind(this);\n        this.getAppendButton = this.getAppendButton.bind(this);\n        this.onSelect = this.onSelect.bind(this);\n        this.getTotal = this.getTotal.bind(this);\n        this.onChange = this.onChange.bind(this);\n    }\n\n    componentDidMount() {\n        if (this.props.value) {\n            this.props.value.map((item) => {\n                this.onSelect(item.product_id, item.count);\n            });\n        }\n    }\n\n    componentWillUpdate(nextProps, nextState, nextContext) {\n        if (this.props.value.length != nextProps.value.length) {\n\n            if (this.props.value.length > nextProps.value.length) {\n                let productsData = this.state.productsData.filter((item) => {\n                    let isExists = false;\n\n                    nextProps.value.map((product) => {\n                        if (product.id == item.id) {\n                            isExists = true;\n                        }\n                    });\n\n                    return isExists;\n                });\n\n                this.setState({...this.state, productsData: productsData});\n            }\n        }\n    }\n\n    countAction(actionType, id) {\n        let productsData = Object.assign(this.state.productsData, {});\n\n        productsData.map((item) => {\n            if (item.id == id) {\n                if (actionType == 'increase' ) {\n                    item.count++;\n                } else if (item.count != 0) {\n                    item.count--;\n                }\n            }\n        });\n\n        this.setState({ ...this.state, productsData: productsData });\n        this.onChange();\n    }\n\n    onDelete(id) {\n        let productsData = this.state.productsData.filter((item) => item.id != id);\n\n        this.setState(Object.assign(this.state, {\n            productsData: productsData\n        }));\n\n        this.onChange();\n    }\n\n    isWindowOpen() {\n        return this.state.isSelectWindowOpen;\n    }\n\n    toogleWindow() {\n        this.setState({\n            ...this.state,\n            isSelectWindowOpen: !this.state.isSelectWindowOpen\n        });\n    }\n\n    onSelect(selectedId, count=1) {\n        for (let key in this.state.productsData) {\n            if (this.state.productsData[key].id == selectedId) {\n                return ;\n            }\n        }\n\n        let data = {'product': {'id': selectedId}};\n\n        Api.get('product', data, (response) => {\n            let data = response.data;\n\n            if (!data.results.length) {\n                return false;\n            }\n\n            let productsData = this.state.productsData.slice();\n            let product = data.results[0];\n            product.count = count;\n            productsData.push(product);\n\n            this.setState(Object.assign(this.state, {\n                'productsData': productsData,\n            }));\n\n            this.onChange();\n        });\n    }\n\n    getTotal() {\n        return this.state.productsData.reduce((sum, item) => {\n            return sum + item.price*item.count;\n        }, 0);\n    }\n\n    onChange() {\n        let productData = [];\n\n        this.state.productsData.map(item => {\n            productData.push({\n                'id':item.id,\n                'count':item.count\n            });\n        });\n\n        this.props.onChange(this.props.name, productData);\n    }\n\n    getAppendButton() {\n        if (this.props.isShowAppendButton == false) {\n            return null;\n        }\n\n        return <Button onClick={this.toogleWindow} className={\"mt-3\"} >Добавить товар</Button>;\n    }\n\n    render() {\n        let total = this.getTotal();\n        return (\n            <div>\n                <ItemsList\n                    headers={this.state.productHeaders}\n                    body={this.state.productsData}\n                    actions={this.state.productActions}\n                />\n                <div className={'pl-2 pt-3 text-left'}>Всего: {total} р.</div>\n\n                {this.getAppendButton()}\n                \n                <SelectWindow\n                    isWindowOpen={this.isWindowOpen}\n                    toogleWindow={this.toogleWindow}\n                    location={this.props.location}\n                    title={this.state.titleSelectWindow}\n                    source={this.state.selectWindowSource}\n                    onSelect={this.onSelect}\n                    searchFields={this.state.searchFieldsSelectWindow}\n                />\n            </div>\n        );\n    }\n}\n\nOrder.propTypes = {\n    value: PropTypes.array,\n    location: PropTypes.object,\n    name: PropTypes.string,\n    onChange: PropTypes.func.isRequired\n};\n\nexport default Order;","import axios from 'axios';\n\nconst apiURLGetToken = 'http://localhost/_api/image/get/token';\nconst apiURLAdd      = 'http://localhost/_api/image/add';\nconst apiURLDelete   = 'http://localhost/_api/image/delete';\n\nexport default {\n    add: function(data, callback) {\n        this._query('add', data, callback);\n    },\n    delete: function(data, callback) {\n        this._query('delete', data, callback);\n    },\n    getImageToken: function(data, callback) {\n        this._query('getToken', data, callback);\n    },\n    _query: function(queryType, data, callback) {\n        let formData = new FormData();\n        let url = this._getUrl(queryType);\n        let headers = {\n            'Content-Type': 'multipart/form-data'\n        };\n\n        if (data['authRoken'] != undefined) {\n            headers['X-AUTH-TOKEN'] = data['authRoken'];\n\n            delete data['authRoken'];\n        }\n\n        console.log('data', data);\n\n        for (let key in data) {\n            formData.append(key, data[key]);\n        }\n\n        axios.post(url, formData, {\n            headers: headers\n        })\n        .then(function (response) {\n            callback(response.data);\n        })\n        .catch(function (e) {\n            console.log('error');\n            console.log(e);\n        });\n    },\n    _getUrl: function(queryType) {\n        if (queryType == 'add') {\n            return apiURLAdd;\n        }\n\n        if (queryType == 'delete') {\n            return apiURLDelete;\n        }\n\n        if (queryType == 'getToken') {\n            return apiURLGetToken;\n        }\n    }\n}","import React from \"react\";\nimport Container from 'react-bootstrap/Container';\nimport RemoveIcon from 'react-icons/lib/md/clear'\nimport AddIcon from 'react-icons/lib/md/control-point'\nimport imagesApi from '../../cutrayApi/ImagesApi';\nimport { If, Then } from 'react-if'\n\nclass Images extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            images: [],\n            imageToken: '',\n            authToken: this.props.authToken\n        };\n\n        let data = {'type': this.props.type};\n\n        if (this.props.id) {\n            data['id'] = this.props.id;\n        }\n\n        imagesApi.getImageToken(data, (data) => {\n            let newState = Object.assign({}, this.state);\n\n            newState.imageToken = data.token;\n            newState.images = [];\n\n            data.blobs.map((item) => {\n                newState.images.push({ source: 'data:image/jpeg;base64,' + item})\n            });\n\n            this.setState(newState);\n            this.props.onInit(data.token);\n        });\n    }\n\n    onChange(e) {\n        let callback = (data) => {\n            console.log('onChange', data);\n            let newState = Object.assign({}, this.state);\n\n            newState.images[data.position] = { source: 'data:image/jpeg;base64,' + data.blob};\n\n            this.setState(newState);\n        };\n\n        let params = {\n            'authToken': this.state.authToken,\n            'token': this.state.imageToken,\n            'position': e.target.getAttribute('position'),\n            'image': e.target.files[0],\n        };\n\n        imagesApi.add(params, callback.bind(this));\n    }\n\n    onAdd(e) {\n        if (!e.target.files.length) {\n            return ;\n        }\n\n        let position = this.state.images.length;\n\n        let callback = (data) => {\n            let newState = Object.assign({}, this.state);\n\n            newState.images.push({ source: 'data:image/jpeg;base64,' + data.blob});\n\n            this.setState(newState);\n        };\n\n        let params = {\n            authToken: this.state.authToken,\n            token: this.state.imageToken,\n            position: position,\n            image: e.target.files[0]\n        };\n\n        imagesApi.add(params, callback.bind(this));\n    }\n\n    onDelete(position) {\n        let callback = (data) => {\n            let newState = {...this.state};\n\n            newState.images.splice(position, 1);\n\n            this.setState(newState);\n        };\n\n        let data = {\n            authToken: this.state.authToken,\n            token: this.state.imageToken,\n            position: position\n        };\n\n        imagesApi.delete(data, callback.bind(this));\n    }\n\n    render() {\n        return (\n            <Container>\n                {this.state.images.map((item, key) => {\n                    return (\n                        <div key={key} className=\"images-outblock\">\n                            <div className=\"images-innerblock\">\n                                <RemoveIcon className=\"images-icon-remove\" key=\"beer\" onClick={() => {this.onDelete(key)}}/>\n                                <img className=\"images-imageblock\" src={item.source} />\n                                <input className=\"images-input\" position={key} onChange={this.onChange.bind(this)} type=\"file\"/>\n                            </div>\n                        </div>\n                    )\n                })}\n\n                <If condition={this.state.images.length < 10}>\n                    <Then>\n                        <div className=\"images-outblock\">\n                            <div className=\"images-innerblock\">\n                                <AddIcon className=\"images-addblock\" />\n                                <input className=\"images-input\" onChange={this.onAdd.bind(this)} type=\"file\"/>\n                            </div>\n                        </div>\n                    </Then>\n                </If>\n            </Container>\n        );\n    }\n}\n\nexport default Images;","import React from \"react\";\nimport SweetAlert from 'sweetalert2-react';\nimport Container from 'react-bootstrap/Container';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport ParentCategory from './FormTypes/ParentCategory';\nimport UserSelect from './FormTypes/UserSelect';\nimport Category from './FormTypes/Category';\nimport Order from './FormTypes/Order';\nimport Images from './FormTypes/Images';\n\nclass CustomForm extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            fields: this.props.fields,\n            isInit: false,\n            isEdit: this.props.isEdit ? true : false,\n            isShowSuccess: false,\n            isShowError: false\n        };\n\n        if (this.props.onInit != undefined) {\n            this.props.onInit(\n                ((fields) => {\n                    this.setState({...this.state, fields: fields, isInit: true})\n                }).bind(this)\n            );\n        }\n\n        this.onSave = this.onSave.bind(this);\n        this.onChange = this.onChange.bind(this);\n        this.onImageInit = this.onImageInit.bind(this);\n    }\n\n    onSave() {\n        this.props.onSave(this.state.fields, (response) => {\n            let isShowSuccess = response != undefined;\n            let isShowError = response == undefined;\n\n            this.setState({\n                ...this.state,\n                isShowSuccess: isShowSuccess,\n                isShowError: isShowError\n            });\n\n            setInterval(() => {\n                this.setState({\n                    ...this.state,\n                    isShowSuccess: false,\n                    isShowError: false\n                });\n            }, 3000);\n        });\n    }\n\n    onChange(name, value) {\n        let fields = [...this.state.fields];\n\n        fields.map((field) => {\n            if (field.name == name) {\n                field.value = value;\n            }\n        });\n\n        this.props.onChange(fields);\n        this.forceUpdate();\n    }\n\n    onImageInit(token) {\n        setTimeout(() => { this.onChange('image_hash', token); }, 3000);\n    }\n\n    render() {\n        let id = parseInt(this.props.id);\n\n        if (!this.state.fields.length) {\n            return (\n                <div>Данных нет</div>\n            );\n        }\n\n        return (\n            <Container>\n                <Form>\n                    {this.state.fields.map((field, key) => {\n                        if (this.state.isEdit && !field.value) {\n                            return <div key={key}>Загрузка</div>;\n                        }\n\n                        let formField, type = field.type;\n\n                        if (type == 'imageProduct') {\n                            formField = <Images id={id} type='imageProduct' authToken={this.props.token} onInit={this.onImageInit} />\n                        } else if (type == 'category') {\n                            formField = <Category id={field.value} name={field.name} onChange={this.onChange} />\n                        } else if (type == 'userSelect') {\n                            formField = <UserSelect id={field.value} token={this.props.token} name={field.name} onChange={this.onChange} location={this.props.location} />\n                        } else if (type == 'order') {\n                            formField = <Order id={field.value} value={field.value} name={field.name} onChange={this.onChange} location={this.props.location} />\n                        } else if (type == 'parentCategory') {\n                            formField = <ParentCategory id={field.value} isInit={this.state.isInit} isLastSelected={true} name={field.name} onChange={this.onChange} />\n                        } else if (type == 'textarea') {\n                            formField = <Form.Control value={field.value} name={field.name} type={field.label} onChange={(e) => {this.onChange(field.name, e.target.value)}} as=\"textarea\" rows=\"3\" />\n                        } else {\n                            formField = <Form.Control value={field.value} name={field.name} type={field.label} onChange={(e) => {this.onChange(field.name, e.target.value)}} />\n                        }\n\n                        return (\n                            <Form.Group className={'text-left'} key={key}>\n                                <Form.Label className={'pb-2'}>{field.label}</Form.Label>\n                                {formField}\n                            </Form.Group>\n                        )\n                    })}\n\n                    <Button onClick={this.onSave} variant=\"outline-success\">Сохранить</Button>\n\n                    <SweetAlert\n                        show={this.state.isShowSuccess}\n                        text=\"Данные успешно сохранены\"\n                        onConfirm={() => {}}\n                        timer={3000}\n                        confirmButtonColor='#28a745'\n                    />\n                    <SweetAlert\n                        show={this.state.isShowError}\n                        text=\"Ошибка, попробуйте позже\"\n                        onConfirm={() => {}}\n                        timer={3000}\n                        confirmButtonColor='#b33e59'\n                    />\n                </Form>\n            </Container>\n        );\n    }\n\n}\n\nexport default CustomForm;\n\n","import BasePage from \"./BasePage\";\nimport Api from '../../cutrayApi/Api.js'\n\nexport default class BaseEdit extends BasePage {\n    constructor(props) {\n        super(props);\n\n        this.getId = this.getId.bind(this);\n        this.onSave = this.onSave.bind(this);\n        this.onEdit = this.onEdit.bind(this);\n        this.initEdit = this.initEdit.bind(this);\n        this.onChangeFields = this.onChangeFields.bind(this);\n    }\n\n    getId() {\n        return this.props.match.params.id;\n    }\n\n    onChangeFields(fields) {\n        console.log('onChangeFields fields', fields);\n        this.props.changeFields(Object.assign({}, fields));\n    }\n\n    onSave(fields, callback = () => {}) {\n        let data = {\n            token: this.props.token,\n            [this.props.source]:[]\n        };\n\n        fields.forEach((obj) => {\n            data[this.props.source].push({[obj.name]: obj.value});\n        });\n\n        Api.add(this.props.source, data, callback);\n    }\n\n    onEdit(fields, callback = () => {}) {\n        console.log('fields',fields);\n        let data = {\n            token: this.props.token,\n            [this.props.source]:[]\n        };\n\n        let id  = this.props.match.params.id;\n\n        data[this.props.source].push({'id': id});\n\n        fields.forEach((obj) => {\n            data[this.props.source].push({[obj.name]: obj.value});\n        });\n\n        Api.update(this.props.source, data, callback);\n    }\n\n    initEdit() {\n        let id  = this.props.match.params.id;\n        let changeFields = this.props.changeFields;\n\n        this.getList({[this.props.source]: {'id': id}}, (response) => {\n            let data = response.data;\n            let values = data.results[0];\n            let fields = Object.assign(this.props.editFields, {});\n\n            for (let key in fields) {\n                fields[key].value = values[fields[key].name];\n            }\n\n            this.forceUpdate();\n\n            changeFields(fields);\n        });\n    }\n}","import React from \"react\";\nimport Container from 'react-bootstrap/Container';\nimport { connect } from 'react-redux';\nimport Form from '../../../components/Form';\nimport {Link} from \"react-router-dom\"\nimport BaseEdit from \"../BaseEdit\";\nimport { Redirect } from 'react-router-dom';\n\nclass ProductAdd extends BaseEdit {\n    render() {\n        console.log('this.props.token', this.props.token);\n\n        if (!this.checkAccess(this.props.userRoles)) {\n            return <Redirect to={'/'} />;\n        }\n\n        return (\n            <div>\n                <Container className=\"pt-2 pb-3 text-left\">\n                    <Link to={\"/backoffice/\" + this.getSource()}>Назад</Link>\n                </Container>\n\n                <Form\n                    id={this.getId()}\n                    token={this.props.token}\n                    fields={this.props.editFields}\n                    onChange={this.onChangeFields}\n                    onSave={this.onSave} />\n            </div>\n        )\n    }\n}\n\nexport default connect(\n    state =>  ({\n        token: state.profile.token,\n        userRoles: state.profile.userRoles,\n        source: state.product.source,\n        editFields: state.product.editFields\n    }),\n    dispatch => ({\n        changeFields: (data) => {\n            dispatch({ type: 'PRODUCT_FIELDS_CHANGE', data: data})\n        }\n    })\n)(ProductAdd);","import React from \"react\";\nimport Container from 'react-bootstrap/Container';\nimport { connect } from 'react-redux';\nimport Form from '../../../components/Form';\nimport { Link } from \"react-router-dom\"\nimport BaseEdit from \"../BaseEdit\";\nimport { Redirect } from 'react-router-dom';\n\nclass ProductEdit extends BaseEdit {\n    componentWillMount() {\n        this.initEdit();\n    }\n\n    render() {\n        if (!this.checkAccess(this.props.userRoles)) {\n            return <Redirect to={'/'} />;\n        }\n\n        return (\n            <div>\n                <Container className=\"pt-2 pb-3 text-left\">\n                    <Link to={\"/backoffice/\" + this.getSource()}>Назад</Link>\n                </Container>\n\n                <Form\n                    id={this.getId()}\n                    token={this.props.token}\n                    fields={this.props.editFields}\n                    onChange={this.onChangeFields}\n                    onSave={this.onEdit}\n                    location={this.props.location}\n                    source={this.props.source}\n                />\n            </div>\n        )\n    }\n}\n\nexport default connect(\n    state =>  ({\n        token: state.profile.token,\n        userRoles: state.profile.userRoles,\n        source: state.product.source,\n        editFields: state.product.editFields\n    }),\n    dispatch => ({\n        changeFields: (data) => {\n            dispatch({ type: 'PRODUCT_FIELDS_CHANGE', data: data})\n        }\n    })\n)(ProductEdit);","import React from \"react\";\nimport List from '../../../components/List';\nimport { connect } from 'react-redux';\nimport { Container } from 'react-bootstrap';\nimport BaseList from '../BaseList';\nimport { Redirect } from 'react-router-dom';\n\nclass CategoryList extends BaseList {\n    constructor(props) {\n        super(props);\n\n        this.updateList = this.updateList.bind(this);\n    }\n\n    componentDidMount() {\n        this.updateList({\n            [this.props.source]: {\n                'page': this.getPage()\n            }\n        });\n    }\n\n    updateList(params) {\n        this.getList(params, (response) => {\n            this.props.setCategories(response.data);\n        });\n    }\n\n    render() {\n        if (!this.checkAccess(this.props.userRoles)) {\n            return <Redirect to={'/'} />;\n        }\n\n        return (\n            <Container>\n                {this.getListHeader()}\n\n                <List\n                    token={this.props.token}\n                    location={this.props.location}\n                    columns={this.props.showedColumns}\n                    data={this.props.data}\n                    totalCount={this.props.totalCount}\n                    activePage={this.getPage()}\n                    source={this.props.source}\n                    updateList={this.updateList}\n                />\n            </Container>\n        );\n    }\n}\n\nexport default connect(\n    state =>  ({\n        token: state.profile.token,\n        userRoles: state.profile.userRoles,\n        source: state.category.source,\n        data: state.category.data,\n        label: state.category.label,\n        editFields: state.category.editFields,\n        totalCount: state.category.totalCount,\n        showedColumns: state.category.showedColumns\n    }),\n    dispatch => ({\n        setCategories: (data) => {\n            dispatch({ type: 'CATEGORY_SET', data: data});\n        },\n        setPage: (page) => {\n            dispatch({ type: 'CATEGORY_PAGE_SET', page: page});\n        }\n    })\n)(CategoryList);\n","import React from \"react\";\nimport Container from 'react-bootstrap/Container';\nimport { connect } from 'react-redux';\nimport Form from '../../../components/Form';\nimport {Link} from \"react-router-dom\"\nimport BaseEdit from \"../BaseEdit\";\nimport { Redirect } from 'react-router-dom';\n\nclass CategoryAdd extends BaseEdit {\n    render() {\n        if (!this.checkAccess(this.props.userRoles)) {\n            return <Redirect to={'/'} />;\n        }\n\n        return (\n            <div>\n                <Container className=\"pt-2 pb-3 text-left\">\n                    <Link to={\"/backoffice/\" + this.getSource()}>Назад</Link>\n                </Container>\n\n                <Form\n                    id={this.getId()}\n                    token={this.props.token}\n                    fields={this.props.editFields}\n                    onChange={this.onChangeFields}\n                    onSave={this.onSave} />\n            </div>\n        )\n    }\n}\n\nexport default connect(\n    state =>  ({\n        token: state.profile.token,\n        userRoles: state.profile.userRoles,\n        source: state.category.source,\n        editFields: state.category.editFields\n    }),\n    dispatch => ({\n        changeFields: (data) => {\n            dispatch({ type: 'CATEGORY_FIELDS_CHANGE', data: data})\n        }\n    })\n)(CategoryAdd);","import React from \"react\";\nimport Container from 'react-bootstrap/Container';\nimport { connect } from 'react-redux';\nimport Form from '../../../components/Form';\nimport {Link} from \"react-router-dom\";\nimport BaseEdit from \"../BaseEdit\";\nimport { Redirect } from 'react-router-dom';\n\nclass CategoryEdit extends BaseEdit {\n    componentWillMount() {\n        this.initEdit();\n    }\n\n    render() {\n        if (!this.checkAccess(this.props.userRoles)) {\n            return <Redirect to={'/'} />;\n        }\n\n        return (\n            <div>\n                <Container className=\"pt-2 pb-3 text-left\">\n                    <Link to={\"/backoffice/\" + this.getSource()}>Назад</Link>\n                </Container>\n\n                <Form\n                    id={this.getId()}\n                    token={this.props.token}\n                    fields={this.props.editFields}\n                    onChange={this.onChangeFields}\n                    onSave={this.onEdit} />\n            </div>\n        )\n    }\n}\n\nexport default connect(\n    state =>  ({\n        token: state.profile.token,\n        userRoles: state.profile.userRoles,\n        source: state.category.source,\n        editFields: state.category.editFields\n    }),\n    dispatch => ({\n        changeFields: (data) => {\n            dispatch({type: 'CATEGORY_FIELDS_CHANGE', data: data})\n        }\n    })\n)(CategoryEdit);","import React from \"react\";\nimport { connect } from 'react-redux';\nimport List from '../../../components/List';\nimport { Container } from 'react-bootstrap';\nimport BaseList from '../BaseList';\nimport { Redirect } from 'react-router-dom';\n\nclass OrderList extends BaseList {\n    constructor(props) {\n        super(props);\n\n        this.updateList = this.updateList.bind(this);\n    }\n\n    componentDidMount() {\n        this.updateList({\n            [this.props.source]: {\n                'page': this.getPage()\n            }\n        });\n    }\n\n    updateList(params) {\n        this.getList(params, (response) => {\n            this.props.setOrder(response.data);\n        });\n    }\n\n    render() {\n        if (!this.checkAccess(this.props.userRoles)) {\n            return <Redirect to={'/'} />;\n        }\n\n        return (\n            <Container>\n                {this.getListHeader()}\n\n                <List\n                    token={this.props.token}\n                    location={this.props.location}\n                    columns={this.props.showedColumns}\n                    data={this.props.data}\n                    totalCount={this.props.totalCount}\n                    activePage={this.getPage()}\n                    source={this.props.source}\n                    updateList={this.updateList}\n                />\n            </Container>\n        );\n    }\n}\n\nexport default connect(\n    state =>  ({\n        token: state.profile.token,\n        userRoles: state.profile.userRoles,\n        source: state.order.source,\n        data: state.order.data,\n        label: state.order.label,\n        editFields: state.order.editFields,\n        totalCount: state.order.totalCount,\n        showedColumns: state.order.showedColumns\n    }),\n    dispatch => ({\n        setOrder: (data) => {\n            dispatch({ type: 'ORDER_SET', data: data});\n        },\n        setPage: (page) => {\n            dispatch({ type: 'ORDER_PAGE_SET', page: page});\n        }\n    })\n)(OrderList);\n","import React from \"react\";\nimport Container from 'react-bootstrap/Container';\nimport {connect} from 'react-redux';\nimport {Link} from \"react-router-dom\"\nimport Form from '../../../components/Form';\nimport BaseEdit from \"../BaseEdit\";\nimport { Redirect } from 'react-router-dom';\n\nclass OrderAdd extends BaseEdit {\n    render() {\n        if (!this.checkAccess(this.props.userRoles)) {\n            return <Redirect to={'/'} />;\n        }\n\n        return (\n            <div>\n                <Container className=\"pt-2 pb-3 text-left\">\n                    <Link to={\"/backoffice/\" + this.getSource()}>Назад</Link>\n                </Container>\n\n                <Form\n                    id={this.getId()}\n                    token={this.props.token}\n                    location={this.props.location}\n                    fields={this.props.editFields}\n                    onChange={this.onChangeFields}\n                    onSave={this.onSave} />\n            </div>\n        )\n    }\n}\n\nexport default connect(\n    state =>  ({\n        token: state.profile.token,\n        userRoles: state.profile.userRoles,\n        source: state.order.source,\n        editFields: state.order.editFields\n    }),\n    dispatch => ({\n        changeFields: (data) => {\n            dispatch({ type: 'ORDER_FIELDS_CHANGE', data: data})\n        }\n    })\n)(OrderAdd);","import React from \"react\";\nimport Container from 'react-bootstrap/Container';\nimport {connect} from 'react-redux';\nimport Form from '../../../components/Form';\nimport {Link} from \"react-router-dom\";\nimport BaseEdit from \"../BaseEdit\";\nimport { Redirect } from 'react-router-dom';\n\nclass OrderEdit extends BaseEdit {\n    componentWillMount() {\n        this.initEdit();\n    }\n\n    render() {\n        if (!this.checkAccess(this.props.userRoles)) {\n            return <Redirect to={'/'} />;\n        }\n\n        return (\n            <div>\n                <Container className=\"pt-2 pb-3 text-left\">\n                    <Link to={\"/backoffice/\" + this.getSource()}>Назад</Link>\n                </Container>\n\n                <Form\n                    id={this.getId()}\n                    token={this.props.token}\n                    isEdit={true}\n                    location={this.props.location}\n                    fields={this.props.editFields}\n                    onChange={this.onChangeFields}\n                    onSave={this.onEdit} />\n            </div>\n        )\n    }\n}\n\nexport default connect(\n    state =>  ({\n        token: state.profile.token,\n        userRoles: state.profile.userRoles,\n        source: state.order.source,\n        editFields: state.order.editFields\n    }),\n    dispatch => ({\n        changeFields: (data) => {\n            dispatch({ type: 'ORDER_FIELDS_CHANGE', data: data})\n        }\n    })\n)(OrderEdit);","import React from \"react\";\nimport {Link} from \"react-router-dom\";\nimport {Navbar, Nav, NavItem} from 'reactstrap';\n\nexport default class Menu extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            links: [\n                {'to': '/backoffice', 'label': 'Главная'},\n                {'to': '/backoffice/product', 'label': 'Товары'},\n                {'to': '/backoffice/category', 'label': 'Категории'},\n                {'to': '/backoffice/order', 'label': 'Заказы'}\n            ]\n        }\n    }\n\n    render() {\n        return (\n            <div>\n                <Navbar color=\"green\" light expand=\"md\">\n                    <Nav navbar>\n                        {this.state.links.map((item, key) => {\n                            return (\n                                <NavItem className=\"p-2\" key={key}>\n                                    <Link to={item.to}>{item.label}</Link>\n                                </NavItem>\n                            );\n                        })}\n                    </Nav>\n                </Navbar>\n            </div>\n        );\n    }\n}","import React from \"react\";\nimport Menu from \"../Menu\";\nimport { Col } from 'reactstrap';\n\nexport default () => {\n    return (\n        <div className=\"\">\n            <Col>\n                <Menu />\n            </Col>\n            <hr className=\"my-1\" />\n        </div>\n    );\n}","import React from 'react';\nimport { Container, Row, Col } from 'reactstrap';\n\nexport default () => {\n    return (\n        <Container>\n            <Row className=\"mt-5 mb-3\">\n                <Col className=\"text-center\">\n                    <img className=\"mr-3\" height=\"40px\" src=\"/img/logo.png\" alt=\"\"/>\n                    {( new Date()).getFullYear()}\n                </Col>\n            </Row>\n        </Container>\n    );\n}","import React from \"react\";\n\nclass MobileSearch extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            value: '',\n            isBgOpen: false\n        };\n\n        this.onSearch = this.onSearch.bind(this);\n        this.toogleBg = this.toogleBg.bind(this);\n        this.onChange = this.onChange.bind(this);\n        this.getSearchInputBlock = this.getSearchInputBlock.bind(this);\n    }\n\n    toogleBg() {\n        this.setState({...this.state, isBgOpen: !this.state.isBgOpen});\n    }\n\n    onSearch() {\n        this.toogleBg();\n        this.props.onSearch(this.state.value);\n    }\n\n    onChange(e) {\n        this.setState({...this.state, value: e.target.value});\n    }\n\n    getSearchInputBlock() {\n        if (this.state.isBgOpen) {\n            return (\n                <div className={'header__mobile-search-block'}>\n                    <input className={'header__mobile-search-input'} onChange={this.onChange} />\n                    <div className={'header__mobile-search-button'} onClick={this.onSearch}></div>\n                    <div className={'header__mobile-search-bg'} onClick={this.toogleBg}></div>\n                </div>\n            )\n        }\n    }\n\n    render() {\n        return (\n            <div className=\"header__search-mobile\">\n                <div className=\"header__search-mobile-link\" onClick={this.toogleBg}></div>\n\n                {this.getSearchInputBlock()}\n            </div>\n        );\n    }\n}\n\nexport default MobileSearch;","import React from \"react\";\nimport {connect} from \"react-redux\";\nimport { Link } from \"react-router-dom\"\nimport MobileSearch from \"../containers/MobileSearch\";\nimport { Redirect } from 'react-router';\n\nclass Header extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.updateHeader = this.updateHeader.bind(this);\n        this.updateIsSearch = this.updateIsSearch.bind(this);\n        this.onMobileSearch = this.onMobileSearch.bind(this);\n\n    }\n\n    updateHeader(e) {\n        this.props.updateSearchValue(e.target.value);\n\n        this.updateIsSearch();\n    }\n\n    updateIsSearch() {\n        this.props.updateIsSearch(true);\n    }\n\n    getUserBlock() {\n        let isAuth = !!this.props.userId;\n\n        if(isAuth) {\n            return (\n                <div className=\"auth-block\">\n                    <Link className=\"auth-block__profile-link\" to={'/profile'} />\n                    <Link className=\"auth-block__profile-logout\" to={'/logout'} >выйти</Link>\n                </div>\n            );\n        }\n\n        return (\n            <div className=\"auth-block\">\n                <Link className=\"auth-block__auth-link-icon\" to={'/auth'} />\n\n                <Link className=\"auth-block__auth-link\" to={'/auth'} >войти</Link>\n                <div className=\"auth-block__delimiter\">|</div>\n                <Link className=\"auth-block__reg-link\" to={'/registration'} >регистрация</Link>\n            </div>\n        );\n    }\n\n    onMobileSearch(value) {\n        this.props.updateSearchValue(value);\n        this.props.updateIsSearch(true);\n    }\n\n    render() {\n        return (\n            <header className=\"header\">\n                <div className=\"header__mobile-menu\">\n                    <div className=\"header__mobile-menu-link\" onClick={() => {this.props.openMenu();}}></div>\n                </div>\n                <div className=\"logo header__logo\">\n                    <Link to={'/'}>\n                        <img className=\"logo__image header__logo-img\" src=\"/img/logo.png\" />\n                    </Link>\n                </div>\n                <div className=\"search header__search\">\n                    <input className=\"search__input-text header__search-input-text\"\n                           type=\"text\"\n                           value={this.props.searchValue}\n                           onChange={this.updateHeader} />\n                    <Link className=\"search__button\" onClick={this.updateIsSearch} to={'/'} />\n                </div>\n\n                <MobileSearch onSearch={this.onMobileSearch}/>\n\n                <div className=\"header__cart\">\n                    <Link className=\"header__cart-link\" to={'/cart'} />\n                </div>\n                <div className=\"header__favourite\">\n                    <Link className=\"header__favourite-link\" to={'/favourite'} />\n                </div>\n\n                {this.getUserBlock()}\n            </header>\n        );\n    }\n}\n\nexport default connect(\n    state =>  ({\n        userId: state.profile.currentUserId,\n        searchValue: state.header.searchValue,\n    }),\n    dispatch => ({\n        updateSearchValue: (searchValue) => {\n            dispatch({ type: 'HEADER_UPDATE_SEARCH_VALUE', data: {searchValue: searchValue}})\n        },\n        updateIsSearch: (value) => {\n            dispatch({ type: 'HEADER_UPDATE_IS_SEARCH', data: {isSearch: value}})\n        },\n        openMenu() {\n            dispatch({ type: 'HEADER_OPEN_MENU', data: {}})\n        }\n    })\n)(Header);","import React from 'react';\n\nexport default () => {\n    return (\n        <footer className=\"footer\">\n            <div className=\"logo footer__logo\">\n                <img className=\"logo__image logo__image_min\" src=\"/img/logo.png\" />\n            </div>\n\n            <div className=\"year footer__year\">\n                {( new Date()).getFullYear()}\n            </div>\n        </footer>\n    );\n}","import axios from 'axios';\nconst qs = require('query-string');\n\nconst apiURL = 'http://localhost/_api/';\n\nexport default {\n    register(params, callback) {\n        this.__query(apiURL + 'reg', params, callback);\n    },\n    auth(params, callback) {\n        this.__query(apiURL + 'auth', params, callback);\n    },\n    logout(params, callback) {\n        this.__query(apiURL + 'logout', params, callback);\n    },\n    getInfo(params, callback) {\n        this.__query(apiURL + 'user-info', params, callback);\n    },\n    __query(url, params, callback) {\n        let config = {\n            headers: {\n                'Content-Type': 'application/x-www-form-urlencoded'\n            }\n        };\n\n        if (params.token != undefined) {\n            config.headers['X-AUTH-TOKEN'] = params.token;\n        }\n\n        delete params.token;\n\n        axios.post(url, qs.stringify(params), config)\n        .then((res) => {\n            callback(res);\n        })\n        .catch((err) => {\n            console.log(err);\n        });\n    }\n\n}","import React, { Component } from \"react\";\nimport { Redirect } from 'react-router-dom';\nimport UserApi from \"../cutrayApi/UserApi\";\nimport {connect} from \"react-redux\";\n\nclass Authorization extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            email: '',\n            password: '',\n            errors: [],\n            isRedirectToProfile: false\n        };\n\n        this.auth = this.auth.bind(this);\n        this.addErrors = this.addErrors.bind(this);\n        this.onChange = this.onChange.bind(this);\n    }\n\n    addErrors(errors) {\n        this.setState(Object.assign(this.state, {\n            errors: this.state.errors.concat(errors)\n        }));\n    }\n\n    onChange(event) {\n        let newData = {errors: []};\n\n        newData[event.target.name] = event.target.value;\n\n        this.setState(Object.assign(this.state, newData));\n    }\n\n    auth(event) {\n        event.preventDefault();\n\n        let callback = (response) => {\n            let messages = response.data.messages;\n\n            if (messages) {\n                let errors = Object.keys(messages).reduce((arr, item) => {\n                    return arr.concat(messages[item]);\n                }, []);\n\n                this.addErrors(errors);\n\n                return ;\n            }\n\n            this.props.updateUserData({\n                user_id: response.data.user_id,\n                userRoles: response.data.roles,\n                token: response.data.token,\n            });\n\n            this.setState({ ...this.state, isRedirectToProfile: true });\n        };\n\n        let params = {\n            email: this.state.email,\n            password: this.state.password\n        };\n\n        UserApi.auth(params, callback);\n    }\n\n    render () {\n        if (this.state.isRedirectToProfile) {\n            return <Redirect to=\"/profile\" />;\n        }\n\n        return (\n            <div className=\"wrapper wrapper__padding-footer wrapper__border-top\">\n                <div className=\"wrapper_min\">\n                    <h1 className=\"page-header\">Aвторизация</h1>\n                    {this.state.errors.map((item, key) => {\n                        return (\n                            <div className={'auth__error'} key={key}>{item}</div>\n                        );\n                    })}\n                    <form>\n                        <div className=\"auth__login\">\n                            <input\n                                className=\"input-area\"\n                                placeholder=\"Введите email\"\n                                type=\"email\"\n                                onChange={this.onChange}\n                                name={'email'}\n                                value={this.state.email}\n                            />\n                        </div>\n                        <div className=\"auth__password\">\n                            <input\n                                className=\"input-area\"\n                                placeholder=\"Введите пароль\"\n                                type=\"password\"\n                                onChange={this.onChange}\n                                name={'password'}\n                                value={this.state.password}\n                            />\n                        </div>\n                        <div className=\"auth__submit\">\n                            <input className=\"button\" onClick={this.auth} type=\"submit\" value=\"Войти\" />\n                        </div>\n                    </form>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default connect(\n    state =>  ({}),\n    dispatch => ({\n        updateUserData: (userData) => {\n            dispatch({ type: 'UPDATE_PROFILE_USER_DATA', data: userData});\n        }\n    })\n)(Authorization);","import React from \"react\";\nimport Swal from 'sweetalert2'\nimport withReactContent from 'sweetalert2-react-content'\n\nconst Window = withReactContent(Swal)\n\nexport default Window;\n\n// export default class SuccessWindow extends React.Component {\n//     render() {\n//         return (\n//\n//             <div>\n//                 <Navbar color=\"green\" light expand=\"md\">\n//                     <Nav navbar>\n//                         {this.state.links.map((item, key) => {\n//                             return (\n//                                 <NavItem className=\"p-2\" key={key}>\n//                                     <Link to={item.to}>{item.label}</Link>\n//                                 </NavItem>\n//                             );\n//                         })}\n//                     </Nav>\n//                 </Navbar>\n//             </div>\n//         );\n//     }\n// }\n//\n//\n//\n","import React, { Component } from \"react\";\nimport Window from \"../containers/Window\";\nimport { Redirect } from 'react-router-dom';\nimport UserApi from \"../cutrayApi/UserApi\";\nimport {connect} from \"react-redux\";\n\nclass Registration extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            email: '',\n            name: '',\n            password: '',\n            repeat_password: '',\n            errors: [],\n            isRedirectToProfile: false\n        };\n\n        this.registration = this.registration.bind(this);\n        this.addErrors = this.addErrors.bind(this);\n        this.clearData = this.clearData.bind(this);\n        this.onChange = this.onChange.bind(this);\n    }\n\n    addErrors(errors) {\n        this.setState(Object.assign(this.state, {\n            errors: this.state.errors.concat(errors)\n        }));\n    }\n\n    clearData() {\n        this.setState(Object.assign(this.state, {\n            email: '',\n            name: '',\n            password: ''\n        }));\n    }\n\n    onChange(event) {\n        let newData = {errors: []};\n\n        newData[event.target.name] = event.target.value;\n\n        this.setState(Object.assign(this.state, newData));\n    }\n\n    registration(event) {\n        event.preventDefault();\n\n        if (this.state.password != this.state.repeat_password) {\n            this.addErrors(['Пароли не совпадают']);\n\n            return ;\n        }\n\n        let callback = (response) => {\n            let messages = response.data.messages;\n\n            if (messages) {\n                let errors = Object.keys(messages).reduce((arr, item) => {\n                    return arr.concat(messages[item]);\n                }, []);\n\n                this.addErrors(errors);\n\n                return ;\n            }\n\n            Window.fire('', 'Вы успешно зарегистрировались', 'success');\n\n            this.props.updateUserData({\n                user_id: response.data.user_id,\n                userRoles: response.data.roles,\n                token: response.data.token,\n            });\n\n            setTimeout(() => {\n                this.setState({ ...this.state, isRedirectToProfile: true});\n            }, 2000);\n        };\n\n        let params = {\n            email: this.state.email,\n            name: this.state.name,\n            password: this.state.password\n        };\n\n        UserApi.register(params, callback);\n    }\n\n    render () {\n        if (this.state.isRedirectToProfile) {\n            return <Redirect to=\"/profile\" />;\n        }\n\n        return (\n            <div className=\"wrapper wrapper__padding-footer wrapper__border-top\">\n                <div className=\"wrapper_min\">\n                    <h1 className=\"page-header\">Регистрация</h1>\n                    {this.state.errors.map((item, key) => {\n                        return (\n                            <div className={'registration__error'} key={key}>{item}</div>\n                        );\n                    })}\n                    <form>\n                        <div className=\"registration__input\">\n                            <input\n                                className=\"input-area\"\n                                placeholder=\"Введите email\"\n                                type=\"email\"\n                                onChange={this.onChange}\n                                name={'email'}\n                                value={this.state.email}\n                            />\n                        </div>\n                        <div className=\"registration__input\">\n                            <input\n                                className=\"input-area\"\n                                placeholder=\"Введите Имя\"\n                                type=\"text\"\n                                onChange={this.onChange}\n                                name={'name'}\n                                value={this.state.name}\n                            />\n                        </div>\n                        <div className=\"registration__input\">\n                            <input\n                                className=\"input-area\"\n                                placeholder=\"Введите пароль\"\n                                type=\"password\"\n                                onChange={this.onChange}\n                                name={'password'}\n                                value={this.state.password}\n                            />\n                        </div>\n                        <div className=\"registration__input\">\n                            <input\n                                className=\"input-area\"\n                                placeholder=\"Повторите пароль\"\n                                type=\"password\"\n                                onChange={this.onChange}\n                                name={'repeat_password'}\n                                value={this.state.repeat_password}\n                            />\n                        </div>\n                        <div className=\"registration__submit\">\n                            <input className=\"button\" type=\"submit\" onClick={this.registration} value=\"Зарегистрироваться\" />\n                        </div>\n                    </form>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default connect(\n    state =>  ({}),\n    dispatch => ({\n        updateUserData: (userData) => {\n            dispatch({ type: 'UPDATE_PROFILE_USER_DATA', data: userData});\n        }\n    })\n)(Registration);","import React, { Component } from \"react\";\nimport userApi from '../cutrayApi/UserApi';\nimport {connect} from \"react-redux\";\nimport { Redirect } from 'react-router-dom';\n\nclass Logout extends Component {\n    constructor(props) {\n        super(props);\n\n        let params = {token: this.props.token};\n\n        userApi.logout(params,() => {\n            this.props.clearUserData();\n        });\n    }\n\n    render () {\n        return <Redirect to={'/'} />;\n    }\n}\n\nexport default connect(\n    state =>  ({\n        token: state.profile.token\n    }),\n    dispatch => ({\n        clearUserData: (userData) => {\n            dispatch({ type: 'CLEAR_PROFILE_USER_DATA', data: {}});\n        }\n    })\n)(Logout);","import React, { Component } from \"react\";\nimport {connect} from \"react-redux\";\n\nclass BaseClosedPage extends Component {\n    constructor(props) {\n        super(props);\n\n        this.checkAccess = this.checkAccess.bind(this);\n    }\n\n    checkAccess(accessRoles, callback) {\n        // if (!this.props.userRolses) {\n        //     // get\n        //     // this.checkAcess()\n        //\n        //     return ;\n        // }\n\n\n        // let accessRoles = ['ROLE_USER'];\n        //\n        // let arr = accessRoles.filter((item) => {\n        //     return roles.indexOf(item) == -1 ? false : true;\n        // });\n        //\n        // return arr.length == 0 ? false : true;\n\n        // true;\n    }\n}\n\n// export  default BaseClosedPage;\n\nexport default connect(\n    state =>  ({\n        userRoles: state.profile.userRoles,\n    }),\n    dispatch => ({})\n)(BaseClosedPage);","import React, { Component } from \"react\";\nimport {Container, Col} from \"react-bootstrap\";\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport { connect } from 'react-redux';\nimport cutrayApi from \"../../cutrayApi/Api\";\nimport Window from \"../../containers/Window\";\nimport BaseClosedPage from '../BaseClosedPage';\nimport { Redirect } from 'react-router-dom';\nimport AccessManager from \"../../accessManager/AccessManager\";\nimport Navigation from \"../../containers/Navigation\";\n\nclass Settings extends BaseClosedPage {\n    constructor(props) {\n        super(props);\n\n        let allowRoles = ['ROLE_USER'];\n\n        let accessManager = new AccessManager();\n        let isAllowAccess = accessManager.check(allowRoles, this.props.userRoles);\n\n        this.state = {\n            isAllowAccess: isAllowAccess\n        };\n\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.load = this.load.bind(this);\n\n        if (isAllowAccess) {\n            this.load();\n        }\n    }\n\n    load() {\n        let userId = this.props.userId;\n        let data = {\n            token: this.props.token,\n            user: [{id: userId}]\n        };\n\n        cutrayApi.get('user', data, (res) => {\n            if (res.data.results.length == 0) {\n\n                return ;\n            }\n\n            this.props.updateData('email', res.data.results[0].email);\n            this.forceUpdate();\n        });\n    }\n\n    handleSubmit(event) {\n        event.preventDefault();\n\n        let source = this.props.source;\n        let data   = {token: this.props.token};\n\n        if (this.props.formData.password != this.props.formData.repeat_password) {\n            this.props.updateErrors({password: ['Пароли не совпадают']});\n            this.props.updateErrors({repeat_password: ['Пароли не совпадают']});\n\n            return ;\n        }\n\n        data[source] = [\n            {email: this.props.formData.email},\n            {password: this.props.formData.password},\n        ];\n\n        cutrayApi.update(source, data, (res) => {\n            if (cutrayApi.isSuccess(res)) {\n                Window.fire('', 'Данные успешно сохранены', 'success');\n\n                return ;\n            }\n\n            let errors = cutrayApi.getMessages(res);\n\n            this.props.updateErrors(errors);\n        });\n    }\n\n    handleChange(event) {\n        let name = event.target.name;\n\n        if (name == 'password' || name =='repeat_password') {\n            this.props.clearErrorField('password');\n            this.props.clearErrorField('repeat_password');\n        } else {\n            this.props.clearErrorField(event.target.name);\n        }\n\n        this.props.updateData(event.target.name, event.target.value);\n    }\n\n    getNavigationItems() {\n        return [\n            {\n                'link': '/profile/settings',\n                'name': 'Личная информация',\n                'isActive': true\n            },\n            {\n                'link': '/profile/history',\n                'name': 'История заказов'\n            }\n        ];\n    }\n\n    render () {\n        if (!this.state.isAllowAccess) {\n            return <Redirect to={'/auth'} />;\n        }\n\n        return (\n            <div className=\"wrapper wrapper__border-top wrapper__padding-footer\">\n                <div className={'catalog'}>\n                    <div className={'catalog__menu'}>\n                        <Navigation\n                            navigationName={'Меню'}\n                            items={this.getNavigationItems()} />\n                    </div>\n                    <div className={'catalog__items'}>\n                        <Form\n                            className={'text-left'}\n                            validated={false}\n                            onSubmit={this.handleSubmit}\n                        >\n                            <Form.Group className={'text-left'} as={Col} md=\"4\" controlId=\"message\">\n                                <Form.Label className={'pt-2 pb-2'}>Ваш email:</Form.Label>\n                                <Form.Control\n                                    autoComplete=\"off\"\n                                    type=\"text\"\n                                    name=\"email\"\n                                    value={this.props.formData.email}\n                                    onChange={this.handleChange}\n                                    isInvalid={this.props.formErrors.email}\n                                />\n                                <Form.Control.Feedback>Все верно!</Form.Control.Feedback>\n                                <Form.Control.Feedback type=\"invalid\">\n                                    {this.props.formErrors.email}\n                                </Form.Control.Feedback>\n                            </Form.Group>\n\n                            <Form.Group className={'text-left'} as={Col} md=\"4\" controlId=\"subject\">\n                                <Form.Label className={'pt-2 pb-2'}>Пароль:</Form.Label>\n                                <Form.Control\n                                    type=\"password\"\n                                    name=\"password\"\n                                    value={this.props.formData.password}\n                                    onChange={this.handleChange}\n                                    isInvalid={this.props.formErrors.password}\n                                />\n                                <Form.Control.Feedback>Все верно!</Form.Control.Feedback>\n                                <Form.Control.Feedback type=\"invalid\">\n                                    {this.props.formErrors.password}\n                                </Form.Control.Feedback>\n                            </Form.Group>\n\n                            <Form.Group className={'text-left'} as={Col} md=\"4\" controlId=\"subject\">\n                                <Form.Label className={'pt-2 pb-2'}>Повторите пароль:</Form.Label>\n                                <Form.Control\n                                    type=\"password\"\n                                    name=\"repeat_password\"\n                                    onChange={this.handleChange}\n                                    isInvalid={this.props.formErrors.repeat_password}\n                                />\n                                <Form.Control.Feedback>Все верно!</Form.Control.Feedback>\n                                <Form.Control.Feedback type=\"invalid\">\n                                    {this.props.formErrors.repeat_password}\n                                </Form.Control.Feedback>\n                            </Form.Group>\n\n                            <Button\n                                className={'m-3'}\n                                type=\"submit\"\n                                disabled={this.props.isLoading}\n                            >\n                                {this.props.isLoading ? 'Загрузка…' : 'Сохранить'}\n                            </Button>\n                        </Form>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default connect(\n    state =>  ({\n        token: state.profile.token,\n        userRoles: state.profile.userRoles,\n        userId: state.profile.currentUserId,\n        source: state.profile.source,\n        formData: state.profile.formData,\n        formErrors: state.profile.formErrors,\n        isLoading: state.profile.isLoading\n    }),\n    dispatch => ({\n        updateData: (name, value) => {\n            dispatch({ type: 'UPDATE_PROFILE_FORM', data: {\"name\": name, \"value\": value}});\n        },\n        updateIsLoading: (value) => {\n            dispatch({ type: 'UPDATE_PRODILE_FORM_IS_LOADING', data: {\"isLoading\": value}});\n        },\n        updateErrors: (errors) => {\n            dispatch({ type: 'UPDATE_ERRORS_PROFILE_FORM', data: errors});\n        },\n        clearErrorField: (name) => {\n            dispatch({ type: 'CLEAR_ERROR_FIELD_PROFILE_FORM', data: {'name':name}});\n        }\n    })\n)(Settings);","import React from \"react\";\nimport PropTypes from 'prop-types';\nimport Container from \"react-bootstrap/Container\";\n\nclass Status extends React.Component {\n    getStatusDescription(statusCode) {\n        if (statusCode == '101') {\n            return 'Новый';\n        }\n\n        if (statusCode == '200') {\n            return 'В работе';\n        }\n\n        if (statusCode == '300') {\n            return 'Успешно';\n        }\n\n        if (statusCode == '401') {\n            return 'Отменен пользователем';\n        }\n\n        if (statusCode == '402') {\n            return 'Отменен менеджером';\n        }\n    }\n\n    render() {\n        return <div className={this.props.className}>{this.getStatusDescription(this.props.code)}</div>\n    }\n}\n\nStatus.propTypes = {\n    code: PropTypes.number.isRequired\n};\n\nexport default Status;","import React from \"react\";\nimport {Link} from \"react-router-dom\";\n\nclass OrderLink extends React.Component {\n    getLink() {\n        return '/profile/order/' + this.props.id;\n    }\n\n    render() {\n        return <Link className={this.props.className} to={this.getLink()}>{this.props.children}</Link>;\n    }\n}\n\nexport default OrderLink;","import React from \"react\";\nimport Status from '../../containers/Order/Status';\nimport { Table, Thead, Tbody, Tr, Th, Td } from \"react-super-responsive-table\";\nimport Image from '../../containers/List/Column/Image';\nimport cutrayApi from \"../../cutrayApi/Api\";\nimport { connect } from \"react-redux\";\nimport OrderLink from \"../../containers/Order/Link\";\nimport {Link, Redirect} from 'react-router-dom';\nimport BaseClosedPage from '../BaseClosedPage';\nimport AccessManager from \"../../accessManager/AccessManager\";\nimport NotFound from \"../../containers/NotFound\";\nimport Navigation from \"../../containers/Navigation\";\n\nclass History extends BaseClosedPage {\n    constructor(props) {\n        super(props);\n\n        let allowRoles = ['ROLE_USER'];\n        let accessManager = new AccessManager();\n        let isAllowAccess = accessManager.check(allowRoles, this.props.userRoles);\n\n        this.state = {\n            allowRoles: allowRoles,\n            isEmpty: false,\n            isLoading: true,\n            orders: [],\n            isAllowAccess: isAllowAccess\n        };\n\n        this.loadOrders = this.loadOrders.bind(this);\n        this.loadOrdersProducts = this.loadOrdersProducts.bind(this);\n\n        if (isAllowAccess) {\n            this.loadOrders();\n        }\n    }\n\n    loadOrders() {\n        let params = {\n            token: this.props.token,\n            order: {\n                user_id: this.props.userId,\n                countOnPage: 1000\n            }\n        };\n\n        let orderCallback = (response) => {\n            if (response.data.length == 0) {\n                this.setState({\n                    ...this.state,\n                    isEmpty: true,\n                    isLoading: false\n                });\n\n                return ;\n            }\n\n            this.loadOrdersProducts(response.data.results);\n        };\n\n        cutrayApi.get('order', params, orderCallback);\n    }\n\n    loadOrdersProducts(orders) {\n        let ids = [];\n\n        orders.map((item) => {\n            item.products.map((product) => {\n                ids.push(product.product_id);\n            })\n        });\n\n        ids = this.getUniqueArr(ids);\n\n        let productCallback = (res) => {\n            let products = [];\n\n            res.data.results.map((product) => {\n                products[product.id] = product;\n            });\n\n            orders.map((order) => {\n                order.products.map((product) => {\n                    product.data = products[product.product_id];\n                });\n            });\n\n            this.setState(Object.assign({}, {\n                ...this.state,\n                orders: orders,\n                isLoading: false\n            }));\n        };\n\n        cutrayApi.get('product',{product: {\n            ids: ids,\n            countOnPage: 1000\n        }}, productCallback);\n    }\n\n    getUniqueArr(ids) {\n        return ids.filter((value, index, self) => {\n            return self.indexOf(value) === index;\n        });\n    }\n\n    getNavigationItems() {\n        return [\n            {\n                'link': '/profile/settings',\n                'name': 'Личная информация'\n            },\n            {\n                'link': '/profile/history',\n                'name': 'История заказов',\n                'isActive': true\n            }\n        ];\n    }\n\n    render () {\n        if (!this.state.isAllowAccess) {\n            return <Redirect to={'/auth'} />;\n        }\n\n        if (!this.state.orders.length) {\n            return (\n                <div className={'wrapper wrapper__border-top wrapper__padding-footer'}>\n                    Заказы на найдены вы можете оформить заказ в <Link to={'/cart'}>корзине</Link>\n                </div>\n            );\n        }\n\n        return (\n            <div className=\"wrapper wrapper__border-top wrapper__padding-footer\">\n                <div className={'catalog'}>\n                    <div className={'catalog__menu'}>\n                        <Navigation\n                            navigationName={'Меню'}\n                            items={this.getNavigationItems()} />\n                    </div>\n                    <div className={'catalog__items'}>\n                        <Table>\n                            <Thead>\n                                <Tr>\n                                    <Td>Номер заказа</Td>\n                                    <Td>Статус</Td>\n                                    <Td>Товары</Td>\n                                    <Td>Сумма</Td>\n                                </Tr>\n                            </Thead>\n                            <Tbody>\n                                {this.state.orders.map((item, key) => {\n                                    return (\n                                        <Tr key={key}>\n                                            <Td text-align={'text-center'}>\n                                                <OrderLink id={item.id}>Заказ {item.id}</OrderLink>\n                                            </Td>\n                                            <Td><Status code={parseInt(item.status)}/></Td>\n                                            <Td>\n                                                {item.products.map((product, index) => {\n                                                    return <Image className={'img-list'} key={index} imgPaths={product.data.img_paths} />\n                                                })}\n                                            </Td>\n                                            <Td>{item.amount} р.</Td>\n                                        </Tr>\n                                    );\n                                })}\n                            </Tbody>\n                        </Table>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default connect(\n    state =>  ({\n        token: state.profile.token,\n        userRoles: state.profile.userRoles,\n        userId: state.profile.currentUserId\n    }),\n    dispatch => ({})\n)(History);","import React from \"react\";\n\nexport default class Loading extends React.Component {\n    render() {\n        if (this.props.isLoading) {\n            return (\n                <div id=\"fountainG\">\n                    <div id=\"fountainG_1\" className=\"fountainG\"></div>\n                    <div id=\"fountainG_2\" className=\"fountainG\"></div>\n                    <div id=\"fountainG_3\" className=\"fountainG\"></div>\n                    <div id=\"fountainG_4\" className=\"fountainG\"></div>\n                    <div id=\"fountainG_5\" className=\"fountainG\"></div>\n                    <div id=\"fountainG_6\" className=\"fountainG\"></div>\n                    <div id=\"fountainG_7\" className=\"fountainG\"></div>\n                    <div id=\"fountainG_8\" className=\"fountainG\"></div>\n                </div>\n            );\n        }\n\n        return ;\n    }\n}","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Container } from 'react-bootstrap';\nimport { Link } from \"react-router-dom\";\nimport { Redirect } from 'react-router-dom';\nimport Api from '../../cutrayApi/Api';\nimport Order from '../../components/FormTypes/Order';\nimport Loading from '../../containers/Loading';\nimport BaseClosedPage from '../BaseClosedPage';\nimport AccessManager from \"../../accessManager/AccessManager\";\nimport Navigation from \"../../containers/Navigation\";\n\nclass OrderPage extends BaseClosedPage {\n    constructor(props) {\n        super(props);\n\n        let allowRoles = ['ROLE_USER'];\n\n        let accessManager = new AccessManager();\n        let isAllowAccess = accessManager.check(allowRoles, this.props.userRoles);\n\n        this.state = {\n            products: [],\n            order: {},\n            isEmpty: false,\n            isLoading: true,\n            isAllowAccess: isAllowAccess\n        };\n\n        this.load = this.load.bind(this);\n\n        if (isAllowAccess) {\n            this.load();\n        }\n    }\n\n    load() {\n        let data = {\n            token: this.props.token,\n            order: {\n                id: parseInt(this.props.match.params.id)\n            }\n        };\n\n        Api.get('order', data, (response) => {\n            if (response.data.results.length == 0) {\n                return ;\n            }\n\n            let order = response.data.results[0];\n\n            this.setState({\n                ...this.state,\n                order: order,\n                isLoading: false\n            });\n        });\n    }\n\n    getNavigationItems() {\n        return [\n            {\n                'link': '/profile/settings',\n                'name': 'Личная информация'\n            },\n            {\n                'link': '/profile/history',\n                'name': 'История заказов'\n            }\n        ];\n    }\n\n    render () {\n        if (!this.state.isAllowAccess) {\n            return <Redirect to={'/auth'} />;\n        }\n\n        if (this.state.isLoading) {\n            return (\n                <Loading isLoading={true} />\n            );\n        }\n\n        return (\n            <div className=\"wrapper wrapper__border-top wrapper__padding-footer\">\n                <div className={'catalog p-3'}>\n                    <div className={'catalog__menu'}>\n                        <Navigation\n                            navigationName={'Меню'}\n                            items={this.getNavigationItems()} />\n                    </div>\n                    <div className={'catalog__items'}>\n                        <h1 className={'header-page'}>Заказ {this.state.order.id}</h1>\n\n                        <Order\n                            value={this.state.order.products}\n                            location={this.props.location}\n                            name={'name'}\n                            isShowAppendButton={false}\n                            onChange={(name, value) => {}}\n                            productActions={[]}\n                        />\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default connect(\n    state =>  ({\n        token: state.profile.token,\n        userRoles: state.profile.userRoles,\n        currentUserId: state.profile.currentUserId\n    }),\n    dispatch => ({})\n)(OrderPage);","import React from \"react\";\nimport PropTypes from 'prop-types';\n\nclass Image extends React.Component {\n    render() {\n        let alt = this.props.alt ? this.props.alt : '';\n        let className = this.props.className ? this.props.className : '';\n        let src = 'http://' + window.location.hostname + '/img/product/' + this.props.src;\n\n        return <img className={className} src={src} alt={alt} />;\n    }\n}\n\nImage.propTypes = {\n    src: PropTypes.string.isRequired\n}\n\nexport default Image;\n\n","import React from \"react\";\nimport {Link} from \"react-router-dom\";\n\nclass ItemLink extends React.Component {\n    getLink() {\n        return '/product/' + this.props.vendor + '_' + this.props.id;\n    }\n\n    render() {\n        return <Link className={this.props.className} to={this.getLink()}>{this.props.children}</Link>;\n    }\n}\n\nexport default ItemLink;","import React, { Component } from \"react\";\nimport {Carousel} from \"react-bootstrap\";\nimport NotFound from '../containers/NotFound';\nimport Api from \"../cutrayApi/Api\";\nimport Loading from \"../containers/Loading\";\nimport Whirligig from 'react-whirligig';\nimport Image from '../containers/Image';\nimport ColumnImage from '../containers/List/Column/Image';\nimport ItemsLink from \"../containers/Item/ItemLink\";\nimport {connect} from \"react-redux\";\nimport BreadCrumbs from \"../breadCrumbs/BreadCrumbs\";\nimport BreadCrumbsContainer from '../containers/BreadCrumbs';\n\nclass Detail extends Component {\n    constructor(props) {\n        super(props);\n\n        let params = this.getParams(this.props.match);\n        let id = params ? params.id : null;\n        let seoname = params ? params.seoname : null;\n        let isNotFound = !params;\n\n        this.state = {\n            isNotFound: isNotFound,\n            id: id,\n            seoname: seoname,\n            product: null,\n            similars: [],\n            carouselSelectItem: 0,\n            countSimilar: this.getCountSimilar(),\n            isInCart: this.checkInCart.bind(this),\n            breadCrumbs: []\n        };\n\n        this.init = this.init.bind(this);\n        this.getProductById = this.getProductById.bind(this);\n        this.getParams = this.getParams.bind(this);\n        this.addToBasket = this.addToBasket.bind(this);\n        this.getCartButtonText = this.getCartButtonText.bind(this);\n        this.checkInCart = this.checkInCart.bind(this);\n\n        if (params) {\n            this.init();\n        }\n\n        window.addEventListener('resize', () => {\n            this.setState({\n                ...this.state,\n                countSimilar: this.getCountSimilar()\n            })\n        });\n    }\n\n    getCountSimilar() {\n        const widthChangeCount = 640;\n\n        return widthChangeCount > window.innerWidth ? 3 : 4;\n    }\n\n    init() {\n        let callback = (product) => {\n\n            let breadCrumbs = new BreadCrumbs({'sub0': product.category.seoname}, false);\n\n            breadCrumbs.getChain((err, breadCrumbs) => {\n                this.setState({...this.state, breadCrumbs: breadCrumbs});\n            });\n\n            this.getSimilarByCatId(product.category.id, (response) => {\n                this.setState(Object.assign(this.state, {\n                    product: product,\n                    similars: response.results\n                }));\n            });\n        };\n\n        this.getProductById(callback);\n    }\n\n    getProductById(callback) {\n        Api.get('product', {product:{id: this.state.id}}, (response) => {\n            if (response.data.totalCount == 0) {\n                this.setState(Object.assign(this.state, {isNotFound: true}));\n\n                return ;\n            }\n\n            callback(response.data.results[0]);\n        });\n    }\n\n    getSimilarByCatId(catId, callback) {\n        Api.get('product', {product:{category_id: catId}}, (response) => {\n            callback(response.data);\n        });\n    }\n\n    getParams(match) {\n        if (!match.params.seonameWithId) {\n            return ;\n        }\n\n        let params = match.params.seonameWithId.split('_');\n\n        if (!params.length == 2) {\n            return ;\n        }\n\n        let id = parseInt(params[1]);\n\n        if (id == NaN) {\n            return ;\n        }\n\n        return {\n            id: parseInt(params[1]),\n            seoname: params[0]\n        };\n    }\n\n    addToBasket() {\n        this.setState({...this.state, isInCart: !this.state.isInCart});\n\n        this.props.addProductToCart(this.state.id);\n    }\n\n    componentWillUpdate(nextProps, nextState, nextContext) {\n        if (this.props.match.url != nextProps.match.url) {\n            let params = this.getParams(nextProps.match);\n            let id = params ? params.id : null;\n            let seoname = params ? params.seoname : null;\n\n            this.setState(Object.assign(this.state, {\n                id: id,\n                seoname: seoname,\n                carouselSelectItem: 0\n            }));\n\n            this.init();\n        }\n    }\n\n    checkInCart() {\n        let isInCart = false;\n\n        this.props.cartProducts.map(item => {\n            if (item.id == this.state.id) {\n                isInCart = true;\n            }\n        });\n\n        return isInCart;\n    }\n\n    getCartButtonText() {\n        if (this.checkInCart()) {\n            return 'В корзине';\n        }\n\n        return 'Добавить в корзину';\n    }\n\n    render () {\n        if (this.state.isNotFound) {\n            return (\n                <NotFound />\n            );\n        }\n\n        if (!this.state.product) {\n            return (\n                <Loading isLoading={true} />\n            );\n        }\n\n        let whirligig;\n        const next = () => whirligig.next();\n        const prev = () => whirligig.prev();\n\n        return (\n            <div className=\"wrapper wrapper__border-top wrapper__padding-footer\">\n                <BreadCrumbsContainer values={this.state.breadCrumbs}/>\n\n                <div className={'wrapper__content'}>\n                    <div className=\"slider\">\n                        <Carousel\n                            activeIndex={this.state.carouselSelectItem}\n                            onSelect={\n                                (index) => {\n                                    this.setState(Object.assign(this.state, {\n                                        carouselSelectItem: index\n                                    }));\n                                }\n                            }>\n\n                            {this.state.product.img_paths.split(',').map((item, key) => {\n                                return (\n                                    <Carousel.Item className={'text-center'} key={key}>\n                                        <Image className=\"block-inline\" src={item} />\n                                    </Carousel.Item>\n                                );\n                            })}\n                        </Carousel>\n                    </div>\n                    <div className=\"item-detail-info\">\n                        <div className=\"item-detail-info__title\">{this.state.product.name}</div>\n                        <div className=\"item-detail-info__price\">{this.state.product.price} р.</div>\n                        <div className=\"item-detail-info__buy-button\" onClick={this.addToBasket}>\n                            <div className={'item-detail-info__cart-icon'}></div>\n                            <div className={'item-detail-info__buy-button-text'}>\n                                {this.getCartButtonText()}\n                            </div>\n                        </div>\n                        <div className=\"item-detail-info__category\">Категория: {this.state.product.category.name}</div>\n                        <div className=\"item-detail-info__description\">{this.state.product.full_description}</div>\n                    </div>\n                </div>\n                <div className={'wrapper__content'}>\n                    <div className={'similar'}>\n                        <div className={'similar__header'}>Похожие товары:</div>\n                        <div className={'similar__body'}>\n                            <div className={'similar__left'}>\n                                <div className={'similar__left-icon'} onClick={prev}></div>\n                            </div>\n                            <div className={'similar__right'}>\n                                <div className={'similar__right-icon'} onClick={next}></div>\n                            </div>\n                            <Whirligig\n                                className={'similar__slider'}\n                                slideClass={'similar__item'}\n                                visibleSlides={this.state.countSimilar}\n                                ref={(_whirligigInstance) => {\n                                    whirligig = _whirligigInstance}\n                                }>\n\n                                {this.state.similars.map((item, key) => {\n                                    return (\n                                        <div className={\"item\"} key={key}>\n                                            <div className={'list__item-im-block'}>\n                                                <ItemsLink className={'list__item-im-link'} id={item.id} vendor={item.vendor} >\n                                                    <ColumnImage className={\"item__preview-img\"} imgPaths={item.img_paths}/>\n                                                </ItemsLink>\n                                            </div>\n                                            <div className={\"similar__item-name\"}>\n                                                <ItemsLink id={item.id} vendor={item.vendor} >\n                                                    {item.name}\n                                                </ItemsLink>\n                                            </div>\n                                            <div className={\"similar__item-price\"}>{item.price} р.</div>\n                                        </div>\n                                    );\n                                })}\n                            </Whirligig>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default connect(\n    state =>  ({\n        cartProducts: state.cart.products\n    }),\n    dispatch => ({\n        addProductToCart: (id) => {\n            dispatch({ type: 'CART_ADD_PRODUCT', data: {id: id}});\n        }\n    })\n)(Detail);","import React, { Component } from \"react\";\nimport Order from '../components/FormTypes/Order';\nimport { connect } from 'react-redux';\nimport Button from 'react-bootstrap/Button';\nimport Api from \"../cutrayApi/Api\";\nimport Window from \"../containers/Window\";\nimport { Link } from \"react-router-dom\";\n\nclass Cart extends Component {\n    constructor(props) {\n        super(props);\n\n        this.registerOrder = this.registerOrder.bind(this);\n        this.onChange = this.onChange.bind(this);\n        this.getOrderButton = this.getOrderButton.bind(this);\n    }\n\n    registerOrder() {\n        let products = [];\n\n        this.props.products.map((item) => {\n            products.push({\n                id: item.id,\n                count: item.count\n            })\n        });\n\n        let data = {\n            token: this.props.token,\n            order: [\n                {user_id: 1},\n                {products: products}\n            ]\n        };\n\n        Api.add('order', data, (response) => {\n            if (!Api.isSuccess(response)) {\n                Window.fire(\n                    'Ошибка',\n                    'На сайте ведуться технические работы, попробуйте позже',\n                    'error'\n                );\n\n                return ;\n            }\n\n            Window.fire(\n              'Заказ оформлен',\n              'Вы можете просмотреть его статус в личном кабинете',\n              'success'\n            );\n\n            this.props.clearAll();\n        });\n    }\n\n    onChange(value) {\n        this.props.updateCart(value);\n    }\n\n    getOrderButton() {\n        if (this.props.userId) {\n            return (\n                <Button\n                    className={'text-left mt-2 mb-4'}\n                    variant={'success'}\n                    onClick={this.registerOrder} >\n                    Заказать\n                </Button>\n            );\n        }\n\n        return (\n            <div className={'p-4'}>\n                Для заказа <Link to={'/auth'}>авторизуйтесь</Link> или <Link to={'/registration'}>зарегистрируйтесь</Link>\n            </div>\n        );\n    }\n\n    render () {\n        if (this.props.products.length == 0) {\n            return (\n                <div className=\"wrapper wrapper__border-top wrapper__padding-footer\">\n                    Корзина пуста\n                </div>\n            )\n        }\n\n        let products = [...this.props.products].map((item) => {\n            item.product_id = item.id;\n\n            return item;\n        });\n\n        return (\n            <div className={'wrapper wrapper__border-top wrapper__padding-footer'}>\n                <div className={'container'}>\n                    <h1 className={'header-page'}>Корзина:</h1>\n\n                    <Order\n                        token={this.props.token}\n                        value={products}\n                        location={this.props.location}\n                        name={'name'}\n                        isShowAppendButton={false}\n                        productActions={[{\n                          'actionName': 'delete',\n                          'action': (id) => {\n                              this.props.deleteItem(id);\n                          }\n                        }]}\n                        onChange={(name, value) => {\n                            this.onChange(value);\n                        }}\n                    />\n                </div>\n\n                {this.getOrderButton()}\n            </div>\n        );\n    }\n}\n\nexport default connect(\n    state =>  ({\n        token: state.profile.token,\n        userId: state.profile.currentUserId,\n        products: state.cart.products\n    }),\n    dispatch => ({\n        updateCart: (products) => {\n            dispatch({ type: 'CART_UPDATE_PRODUCTS', data: {products: products}});\n        },\n        deleteItem: (id) => {\n            dispatch({ type: 'CART_DELETE_PRODUCT', data: {id: id}});\n        },\n        addProductToCart: (id) => {\n            dispatch({ type: 'CART_ADD_PRODUCT', data: {id: id}});\n        },\n        clearAll() {\n            dispatch({ type: 'CART_CLEAR', data: {}});\n        }\n    })\n)(Cart);","import React, { Component } from \"react\";\nimport {Container,  Row, Col} from \"react-bootstrap\";\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport { connect } from 'react-redux';\nimport Api from \"../cutrayApi/Api\";\nimport Window from \"../containers/Window\"\n\nclass Contacts extends Component {\n    constructor(props) {\n        super(props);\n\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    handleSubmit(event) {\n        event.preventDefault();\n\n        let source = this.props.source;\n        let data = {};\n\n        data[source] = [\n            {'subject': this.props.formData.subject},\n            {'message': this.props.formData.message},\n            {'email': this.props.formData.email}\n        ];\n\n        this.props.updateIsLoading(true);\n\n        Api.add(source, data, (res) => {\n            this.props.updateIsLoading(false);\n\n            if (Api.isSuccess(res)) {\n                this.props.clearData();\n                this.props.clearErrors();\n                Window.fire('', 'Сообщение успешно отправлено', 'success');\n\n                return ;\n            }\n\n            let errors = Api.getMessages(res);\n\n            this.props.updateErrors(errors);\n        });\n    }\n\n    handleChange(event) {\n        this.props.clearErrorField(event.target.name);\n        this.props.updateData(event.target.name, event.target.value);\n\n        return false;\n    }\n\n    render () {\n        return (\n            <Container>\n                <Form\n                    validated={false}\n                    onSubmit={this.handleSubmit}\n                >\n                    <Form.Group as={Col} md=\"4\" controlId=\"message\">\n                        <Form.Label>Ваш Email</Form.Label>\n                        <Form.Control\n                            type=\"email\"\n                            name=\"email\"\n                            onChange={this.handleChange}\n                            isInvalid={this.props.formErrors.email}\n                        />\n                        <Form.Control.Feedback>Все верно!</Form.Control.Feedback>\n                        <Form.Control.Feedback type=\"invalid\">\n                            {this.props.formErrors.email}\n                        </Form.Control.Feedback>\n                    </Form.Group>\n\n                    <Form.Group as={Col} md=\"4\" controlId=\"subject\">\n                        <Form.Label>Тема письма</Form.Label>\n                        <Form.Control\n                            type=\"text\"\n                            name=\"subject\"\n                            onChange={this.handleChange}\n                            isInvalid={this.props.formErrors.subject}\n                        />\n                        <Form.Control.Feedback>Все верно!</Form.Control.Feedback>\n                        <Form.Control.Feedback type=\"invalid\">\n                            {this.props.formErrors.subject}\n                        </Form.Control.Feedback>\n                    </Form.Group>\n\n                    <Form.Group as={Col} md=\"4\" controlId=\"message\">\n                        <Form.Label>Собщение</Form.Label>\n                        <Form.Control\n                            type=\"text\"\n                            as=\"textarea\" rows=\"4\"\n                            name=\"message\"\n                            onChange={this.handleChange}\n                            isInvalid={this.props.formErrors.message}\n                        />\n                        <Form.Control.Feedback>Все верно!</Form.Control.Feedback>\n                        <Form.Control.Feedback type=\"invalid\">\n                            {this.props.formErrors.message}\n                        </Form.Control.Feedback>\n                    </Form.Group>\n\n                    <Button\n                        type=\"submit\"\n                        disabled={this.props.isLoading}\n                    >\n                        {this.props.isLoading ? 'Загрузка…' : 'Отправить'}\n                    </Button>\n                </Form>\n            </Container>\n        );\n    }\n}\n\nexport default connect(\n    state =>  ({\n        source: state.contacts.source,\n        formData: state.contacts.formData,\n        formErrors: state.contacts.formErrors,\n        isLoading: state.contacts.isLoading\n    }),\n    dispatch => ({\n        updateData: (name, value) => {\n            dispatch({ type: 'UPDATE_CONTACTS_FORM', data: {\"name\": name, \"value\": value}});\n        },\n        updateIsLoading: (value) => {\n            dispatch({ type: 'UPDATE_CONTACTS_FORM_IS_LOADING', data: {\"isLoading\": value}});\n        },\n        updateErrors: (errors) => {\n            dispatch({ type: 'UPDATE_ERRORS_CONTACTS_FORM', data: errors});\n        },\n        clearErrorField: (name) => {\n            dispatch({ type: 'CLEAR_ERROR_FIELD_CONTACTS_FORM', data: {'name':name}});\n        },\n        clearData: () => {\n            dispatch({ type: 'CLEAR_CONTACTS_FORM', data: {}});\n        },\n        clearErrors: () => {\n            dispatch({ type: 'CLEAR_ERROR_CONTACTS_FORM', data: {}});\n        }\n    })\n)(Contacts);","import React, { Component } from \"react\";\nimport ItemList from '../containers/Item/ItemList';\nimport {connect} from \"react-redux\";\nimport Api from \"../cutrayApi/Api\";\n\nclass Favourite extends Component {\n    constructor(props) {\n        super(props);\n\n        this.loadProducts = this.loadProducts.bind(this);\n        this.onFavouriteClick = this.onFavouriteClick.bind(this);\n\n        this.state = {\n            products: []\n        };\n\n        let ids = [];\n\n        this.props.products.map((item) => {\n            ids.push(item.id);\n        });\n\n        this.loadProducts(ids);\n    }\n\n    loadProducts(ids) {\n        Api.get('product', {product: {ids: ids}}, (response) => {\n            this.setState(Object.assign(this.state, {products: response.data.results}));\n        });\n    }\n\n    componentWillUpdate(nextProps, nextState, nextContext) {\n        if (this.props.products != nextProps.products) {\n            let ids = [];\n\n            nextProps.products.map((item) => {ids.push(item.id);});\n\n            this.loadProducts(ids);\n        }\n    }\n\n    onFavouriteClick(id) {\n        this.props.deleteProduct(id);\n    }\n\n    render () {\n        if (this.props.products.length == 0) {\n            return (\n                <div className=\"wrapper wrapper__border-top wrapper__padding-footer\">\n                    Нет избраных товаров\n                </div>\n            )\n        }\n\n        return (\n            <div className=\"wrapper wrapper__border-top wrapper__padding-footer\">\n                <div className={'container'}>\n                    <h1 className={'header-page'}>Избранные:</h1>\n\n                    {this.state.products.map((item, key) => {\n                        return (\n                            <ItemList\n                                key={key}\n                                id={item.id}\n                                name={item.name}\n                                vendor={item.vendor}\n                                price={item.price}\n                                imgPaths={item.img_paths}\n                                onBasketClick={this.onBasketClick}\n                                onFavouriteClick={this.onFavouriteClick}\n                            />\n                        );\n                    })}\n\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default connect(\n    state =>  ({\n        products: state.favourite.products\n    }),\n    dispatch => ({\n        deleteProduct: (id) => {\n            dispatch({ type: 'FAVOURITE_DELETE_PRODUCT', data: {id: id}});\n        }\n    })\n)(Favourite);","import React from \"react\";\nimport \"react-super-responsive-table/dist/SuperResponsiveTableStyle.css\"\nimport {connect} from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport { slide as BurgerMenu } from \"react-burger-menu\";\n\nclass Menu extends React.Component {\n    constructor(props) {\n        super(props)\n\n        this.onMenuStateChange = this.onMenuStateChange.bind(this);\n        this.closeMenu         = this.closeMenu.bind(this);\n    }\n\n    onMenuStateChange(menuState) {\n        if (this.props.isMenuOpen != menuState.isOpen) {\n            menuState.isOpen ? this.props.openMenu() : this.props.closeMenu();\n        }\n    }\n\n    closeMenu() {\n        this.props.closeMenu();\n    }\n\n    getUserBlockMenu() {\n        if (!this.props.userId) {\n            return (\n                <div className={'burger-menu__block_section'}>\n                    <Link className={'burger-menu__link'} onClick={this.closeMenu} to={'/auth'}>Авторизация</Link>\n                    <Link className={'burger-menu__link'} onClick={this.closeMenu} to={'/registration'}>Регистрация</Link>\n                </div>\n            );\n        }\n\n        return (\n            <div className={'burger-menu__block_section'}>\n                <div className={'burger-menu__sub-header'}>Личный кабинет</div>\n                <div className={'burger-menu__block'}>\n                    <Link className={'burger-menu__link'} onClick={this.closeMenu} to={'/profile/settings'}>Личная информация</Link>\n                    <Link className={'burger-menu__link'} onClick={this.closeMenu} to={'/profile/history'}>История заказов</Link>\n                </div>\n                <div className={'burger-menu__sub-header'}>\n                    <Link className={'burger-menu__link'} onClick={this.closeMenu} to={'/logout'}>Выйти</Link>\n                </div>\n            </div>\n        );\n    }\n\n    render() {\n        return (\n            <BurgerMenu pageWrapId={\"page-wrap\"} onStateChange={this.onMenuStateChange} isOpen={this.props.isMenuOpen}>\n                <div className={'burger-menu'}>\n                    <h1 className={'burger-menu__header'}>Меню</h1>\n\n                    <Link className={'burger-menu__link'} onClick={this.closeMenu} to={'/cart'}>Корзина</Link>\n                    <Link className={'burger-menu__link'} onClick={this.closeMenu} to={'/favourite'}>Избранные</Link>\n\n                    {this.getUserBlockMenu()}\n\n                    <div className={'burger-menu__block_section'}>\n                        {this.props.breadCrumbs.map((item, key) => {\n                            return (\n                                <div key={key}>\n                                    <Link className={'burger-menu__link'} onClick={this.closeMenu} to={item.link}>{item.name}</Link>\n                                </div>\n                            );\n                        })}\n\n                        <div className={'burger-menu__block_section'}>\n                            {this.props.categories.map((item, key) => {\n                                return <Link key={key} className={'burger-menu__link'} onClick={this.closeMenu} to={item.link}>{item.name}</Link>\n                            })}\n                        </div>\n                    </div>\n                </div>\n            </BurgerMenu>\n        );\n    }\n}\n\nexport default connect(\n    state =>  ({\n        breadCrumbs: state.list.breadCrumbs,\n        categories: state.list.categories,\n        isMenuOpen: state.header.isMenuOpen,\n        userId: state.profile.currentUserId\n    }),\n    dispatch => ({\n        updateCart: (products) => {\n            dispatch({ type: 'CART_UPDATE_PRODUCTS', data: {products: products}});\n        },\n        openMenu() {\n            dispatch({ type: 'HEADER_OPEN_MENU', data: {}});\n        },\n        closeMenu() {\n            dispatch({ type: 'HEADER_CLOSE_MENU', data: {}});\n        }\n    })\n)(Menu);\n","import React from 'react';\nimport PropTypes from 'prop-types'\nimport { Provider } from 'react-redux'\nimport {\n    BrowserRouter as Router,\n    Route,\n    Switch,\n    Redirect\n} from 'react-router-dom';\n\nimport './css/app/App.css';\nimport './css/reset.css';\nimport './css/backoffice/Backoffice.css';\n\nimport List from \"./pages/List\";\nimport Index from \"./pages/backoffice/Index\";\n\nimport ProductList from \"./pages/backoffice/product/ProductList\";\nimport ProductAdd from \"./pages/backoffice/product/ProductAdd\";\nimport ProductEdit from \"./pages/backoffice/product/ProductEdit\";\n\nimport CategoryList from \"./pages/backoffice/category/CategoryList\";\nimport CategoryAdd from \"./pages/backoffice/category/CategoryAdd\";\nimport CategoryEdit from \"./pages/backoffice/category/CategoryEdit\";\n\nimport OrderList from \"./pages/backoffice/order/OrderList\";\nimport OrderAdd from \"./pages/backoffice/order/OrderAdd\";\nimport OrderEdit from \"./pages/backoffice/order/OrderEdit\";\n\nimport BackofficeHeader from './containers/Backoffice/Header';\nimport BackofficeFooter from './containers/Backoffice/Footer';\n\nimport Header from './components/Header';\nimport Footer from './containers/Footer';\n\nimport Authorization from \"./pages/Authorization\";\nimport Registration from \"./pages/Registration\";\nimport Logout from \"./pages/Logout\";\nimport Settings from \"./pages/profile/Settings\";\nimport History from \"./pages/profile/History\";\nimport Order from \"./pages/profile/Order\";\nimport Detail from \"./pages/Detail\";\nimport Cart from \"./pages/Cart\";\nimport Contacts from \"./pages/Contacts\";\nimport Favourite from \"./pages/Favourite\";\nimport Menu from './components/Menu';\n\nconst App = ({ store }) => {\n    return (\n        <Provider store={store}>\n            <Router>\n                <div>\n                    <Menu />\n\n                    <Switch>\n                        <Route path=\"/backoffice\" children={<BackofficeHeader />} />\n                        <Route path=\"/\" children={<Header />} />\n                    </Switch>\n\n                    <Switch>\n                        <Route exact path=\"/product/:seonameWithId\" component={Detail} />\n\n                        <Route exact path=\"/cart\" component={Cart} />\n                        <Route exact path=\"/favourite\" component={Favourite} />\n                        <Route exact path=\"/contacts\" component={Contacts} />\n\n                        <Redirect exact from='/profile' to='/profile/history'/>\n                        <Route exact path=\"/profile/settings\" component={Settings} />\n                        <Route exact path=\"/profile/history\" component={History} />\n                        <Route exact path=\"/profile/order/:id\" component={Order} />\n\n                        <Route exact path=\"/auth\" component={Authorization} />\n                        <Route exact path=\"/registration\" component={Registration} />\n                        <Route exact from='/logout' component={Logout} />\n\n                        <Route exact path=\"/backoffice\" component={Index} />\n                        <Route exact path=\"/backoffice/product\" component={ProductList} />\n                        <Route exact path=\"/backoffice/product/add\" component={ProductAdd} />\n                        <Route exact path=\"/backoffice/product/edit/:id\" component={ProductEdit} />\n                        <Route exact path=\"/backoffice/category\" component={CategoryList} />\n                        <Route exact path=\"/backoffice/category/add\" component={CategoryAdd} />\n                        <Route exact path=\"/backoffice/category/edit/:id\" component={CategoryEdit} />\n                        <Route exact path=\"/backoffice/order\" component={OrderList} />\n                        <Route exact path=\"/backoffice/order/add\" component={OrderAdd} />\n                        <Route exact path=\"/backoffice/order/edit/:id\" component={OrderEdit} />\n\n                        <Route path=\"/:sub0/:sub1/:sub2/:sub3\" component={List} />\n                        <Route path=\"/:sub0/:sub1/:sub2\" component={List} />\n                        <Route path=\"/:sub0/:sub1\" component={List} />\n                        <Route path=\"/:sub0\" component={List} />\n                        <Route path=\"/\" component={List} />\n                    </Switch>\n\n                    <Switch>\n                        <Route path=\"/backoffice\" children={<BackofficeFooter />} />\n                        <Route path=\"/\" children={<Footer />} />\n                    </Switch>\n                </div>\n            </Router>\n        </Provider>\n    )\n};\n\nApp.propTypes = {\n    store: PropTypes.object.isRequired\n}\n\nexport default App;","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const initialState = {\n    source: 'contacts',\n    formData: {\n        'subject': '',\n        'message': '',\n        'email': ''\n    },\n    formErrors: {\n        'subject': '',\n        'message': '',\n        'email': '',\n    },\n    isLoading: false,\n};\n\nexport default function (state = initialState, action) {\n    let newState = Object.assign({}, state);\n\n    if (action.type === 'CONTACTS_ADD') {\n\n        return newState;\n    }\n\n    if (action.type === 'UPDATE_CONTACTS_FORM') {\n        newState.formData[action.data.name] = action.data.value;\n\n        return newState;\n    }\n\n    if (action.type === 'UPDATE_CONTACTS_FORM_IS_LOADING') {\n        newState.isLoading = action.data.isLoading;\n\n        return newState;\n    }\n\n    if (action.type === 'UPDATE_ERRORS_CONTACTS_FORM') {\n        let formErrors = Object.assign({}, state.formErrors);\n\n        Object.keys(action.data).map(item => {\n            formErrors[item] = action.data[item];\n        });\n\n        newState.formErrors = formErrors;\n\n        return newState;\n    }\n\n    if (action.type === 'CLEAR_ERROR_FIELD_CONTACTS_FORM') {\n        let formErrors = Object.assign({}, state.formErrors);\n\n        formErrors[action.data.name] = '';\n\n        newState.formErrors = formErrors;\n\n        return newState;\n    }\n\n    if (action.type === 'CLEAR_ERROR_CONTACTS_FORM') {\n        let formErrors = initialState.formErrors;\n\n        newState.formErrors = formErrors;\n\n        return newState;\n    }\n\n    if (action.type === 'CLEAR_CONTACTS_FORM') {\n        newState = Object.assign({}, initialState);\n\n        return newState;\n    }\n\n    return newState;\n}\n","const initialState = {\n    label: 'Категории',\n    source: 'category',\n    data: [],\n    totalCount: 0,\n    editFields: [\n        {\n            label: 'Имя',\n            type: 'input',\n            name: 'name',\n            value: ''\n        },\n        {\n            label: 'Seoname',\n            type: 'input',\n            name: 'seoname',\n            value: ''\n        },\n        {\n            label: 'Родительская категория',\n            type: 'parentCategory',\n            name: 'parent_id',\n            value: 0\n        }\n    ],\n    showedColumns: [\n        {\n            'label': 'Id',\n            'name': 'id',\n        },\n        {\n            'label': 'Имя',\n            'name': 'name',\n        },\n        {\n            'label': 'Seoname',\n            'name': 'seoname',\n        },\n    ]\n};\n\nexport default function (state = initialState, action) {\n    let newState = Object.assign({}, state);\n\n    if (action.type === 'CATEGORY_SET') {\n        newState.data = action.data.results;\n        newState.totalCount = action.data.totalCount;\n\n        return newState;\n    }\n\n    if (action.type === 'CATEGORY_DELETE_BY_ID') {\n        newState.data = newState.data.filter(obj => obj.id != action.id);\n\n        return newState;\n    }\n\n    if (action.type === 'CATEGORY_FIELDS_CHANGE') {\n        newState.editFields = action.data;\n\n        return newState;\n    }\n\n    return newState;\n}\n","const initialState = {\n    label: 'Товары',\n    source: 'product',\n    data: [],\n    totalCount: 0,\n    editFields: [\n        {\n            label: 'Имя',\n            type: 'input',\n            name: 'name',\n            value: ''\n        },\n        {\n            label: 'Артикль',\n            type: 'input',\n            name: 'vendor',\n            value: ''\n        },\n        {\n            label: 'Цена',\n            type: 'input',\n            name: 'price',\n            value: ''\n        },\n        {\n            label: 'Категория',\n            type: 'category',\n            name: 'category_id',\n            value: 0\n        },\n        {\n            label: 'Описание',\n            type: 'textarea',\n            name: 'description',\n            value: ''\n        },\n        {\n            label: 'Полное описание',\n            type: 'textarea',\n            name: 'full_description',\n            value: ''\n        },\n        {\n            label: 'Изображения',\n            type: 'imageProduct',\n            name: 'image_hash',\n            value: ''\n        }\n    ],\n    showedColumns: [\n        {\n            label: 'Id',\n            name: 'id',\n        },\n        {\n            label: 'Картинка',\n            name: 'img_paths',\n            type: 'image'\n        },\n        {\n            label: 'Имя',\n            name: 'name',\n        },\n        {\n            label: 'Артикль',\n            name: 'vendor',\n        },\n        {\n            label: 'Цена',\n            name: 'price',\n        }\n    ]\n};\n\nexport default function (state = initialState, action) {\n    let newState = Object.assign({}, state);\n\n    if (action.type === 'PRODUCT_SET') {\n        newState.data = action.data.results;\n        newState.totalCount = action.data.totalCount;\n\n        return newState;\n    }\n\n    if (action.type === 'PRODUCT_FIELDS_CHANGE') {\n        console.log('PRODUCT_FIELDS_CHANGE', action.data);\n        newState.editFields = action.data;\n\n        return newState;\n    }\n\n    if (action.type === 'PRODUCT_IMAGE_HASH_CHANGE') {\n        newState.editFields.forEach((item) => {\n            if (item.name == 'image_hash') {\n                item.value = action.data.hash;\n            }\n        });\n\n        return newState;\n    }\n\n    return newState;\n}\n","const initialState = {\n    label: 'Заказы',\n    source: 'order',\n    data: [],\n    totalCount: 0,\n    editFields: [\n        {\n            label: 'Выбор клиента',\n            type: 'userSelect',\n            name: 'user_id',\n            value: 0\n        },\n        {\n            label: 'Товары',\n            type: 'order',\n            name: 'products',\n            value: 0\n        }\n    ],\n    showedColumns: [\n        {\n            'label': 'Id',\n            'name': 'id',\n        },\n        {\n            'label': 'Пользователь',\n            'name': 'user_id',\n        },\n        {\n            'label': 'Сумма',\n            'name': 'amount',\n        }\n    ]\n};\n\nexport default function (state = initialState, action) {\n    let newState = Object.assign({}, state);\n\n    if (action.type === 'ORDER_SET') {\n        newState.data = action.data.results;\n        newState.totalCount = action.data.totalCount;\n\n        return newState;\n    }\n\n    if (action.type === 'ORDER_DELETE_BY_ID') {\n        newState.data = newState.data.filter(obj => obj.id != action.id);\n\n        console.log(newState.data);\n\n        return newState;\n    }\n\n    if (action.type === 'ORDER_FIELDS_CHANGE') {\n        newState.editFields = action.data;\n\n        return newState;\n    }\n\n    return newState;\n}\n","const initialState = {\n    source: 'product',\n    isNeedSearch: false,\n    breadCrumbs: [],\n    data: [],\n    categories:[],\n    currentCategory: null,\n    totalCount: 0,\n};\n\nexport default function (state = initialState, action) {\n    let newState = Object.assign({}, state);\n\n    if (action.type === 'LIST_UPDATE_DATA') {\n        newState.data = action.data.results;\n        newState.totalCount = action.data.totalCount;\n\n        return newState;\n    }\n\n    if (action.type === 'LIST_UPDATE_CATEGORIES') {\n        newState.categories = action.data.categories;\n\n        return newState;\n    }\n\n    if (action.type === 'LIST_UPDATE_IS_NEED_SEARCH') {\n        newState.isNeedSearch = action.data.isNeedSearch;\n\n        return newState;\n    }\n\n    if (action.type === 'LIST_UPDATE_CURRENT_CATEGORY') {\n        newState.currentCategory = action.data.currentCategory;\n\n        return newState;\n    }\n\n    if (action.type === 'LIST_UPDATE_BEADCRUMBS') {\n        newState.breadCrumbs = action.data.breadCrumbs;\n\n        return newState;\n    }\n\n    return newState;\n}\n","function getProductFromLocalStorage() {\n    let results = localStorage.getItem('cart');\n\n    if (results == null) {\n        return [];\n    }\n\n    return JSON.parse(results);\n}\n\nconst initialState = {\n    products: getProductFromLocalStorage()\n};\n\nexport default function (state = initialState, action) {\n    let newState = Object.assign({}, state);\n\n    if (action.type === 'CART_UPDATE') {\n        console.log('CART_UPDATE');\n\n        newState.products = action.data.results;\n\n        console.log('newState', newState);\n\n        localStorage.setItem('cart', newState.products);\n\n        return newState;\n    }\n\n    if (action.type === 'CART_ADD_PRODUCT') {\n        let isFind = false;\n\n        newState.products.map((item) => {\n            if (item.id == action.data.id) {\n                isFind = true;\n            }\n        });\n\n        if (!isFind) {\n\n            newState.products.push({\n                id: action.data.id,\n                count: 1\n            });\n\n            localStorage.setItem('cart', JSON.stringify(newState.products));\n        }\n\n        return newState;\n    }\n\n    if (action.type === 'CART_DELETE_PRODUCT') {\n        console.log('CART_DELETE_PRODUCT', action.data.id);\n\n        newState.products = newState.products.filter((item) => {\n            return item.id != action.data.id;\n        });\n\n        console.log('newState.products', newState.products);\n\n        localStorage.setItem('cart', JSON.stringify(newState.products));\n\n        return newState;\n    }\n\n    if (action.type === 'CART_UPDATE_PRODUCTS') {\n        console.log('CART_UPDATE_PRODUCTS');\n        newState.products = action.data.products;\n\n        localStorage.setItem('cart', JSON.stringify(newState.products));\n\n        console.log('CART_UPDATE_PRODUCTS', newState);\n        return newState;\n    }\n\n    if (action.type === 'CART_CLEAR') {\n        newState.products = [];\n\n        localStorage.setItem('cart', JSON.stringify([]));\n\n        return newState;\n    }\n\n    return newState;\n\n}\n","function getCurrentIdFromLocalStorage() {\n    let result = localStorage.getItem('current_user_id');\n\n    return result == null ? 0 : parseInt(result);\n}\n\nfunction getUserRolesFromLocalStorage() {\n    let results = localStorage.getItem('user_roles');\n\n    return results == null ? ['ROLE_UNKNOWN'] : JSON.parse(results);\n}\n\nfunction getTokenFromLocalStorage() {\n    return localStorage.getItem('token');\n}\n\nconst initialState = {\n    currentUserId: getCurrentIdFromLocalStorage(),\n    userRoles: getUserRolesFromLocalStorage(),\n    token: getTokenFromLocalStorage(),\n\n    accessRoles: ['ROLE_USER', 'ROLE_ADMIN'],\n    source: 'user',\n    formData: {\n        email: '',\n        password: '',\n        repeat_password: ''\n    },\n    formErrors: {\n        email: '',\n        password: '',\n        repeat_password: '',\n    },\n    isLoading: false,\n};\n\nexport default function (state = initialState, action) {\n    let newState = Object.assign({}, state);\n\n    if (action.type === 'CLEAR_PROFILE_USER_DATA') {\n        newState.currentUserId = 0;\n        newState.token         = null;\n        newState.userRoles     = ['ROLE_UNKNOWN'];\n\n        localStorage.removeItem('current_user_id');\n        localStorage.removeItem('token');\n        localStorage.removeItem('user_roles');\n\n        return newState;\n    }\n\n    if (action.type === 'UPDATE_PROFILE_USER_DATA') {\n        newState.currentUserId = action.data.user_id;\n        newState.token         = action.data.token;\n        newState.userRoles     = action.data.userRoles;\n\n        localStorage.setItem('current_user_id', newState.currentUserId);\n        localStorage.setItem('token', newState.token);\n        localStorage.setItem('user_roles', JSON.stringify(newState.userRoles));\n\n        return newState;\n    }\n\n    if (action.type === 'UPDATE_PROFILE_USER_ROLES') {\n        newState.userRoles = action.data.userRoles;\n\n        return newState;\n    }\n\n    if (action.type === 'UPDATE_PROFILE_FORM') {\n        newState.formData[action.data.name] = action.data.value;\n\n        return newState;\n    }\n\n    if (action.type === 'UPDATE_PROFILE_FORM_IS_LOADING') {\n        newState.isLoading = action.data.isLoading;\n\n        return newState;\n    }\n\n    if (action.type === 'UPDATE_ERRORS_PROFILE_FORM') {\n        let formErrors = Object.assign({}, state.formErrors);\n\n        Object.keys(action.data).map(item => {\n            formErrors[item] = action.data[item];\n        });\n\n        newState.formErrors = formErrors;\n\n        return newState;\n    }\n\n    if (action.type === 'CLEAR_ERROR_FIELD_PROFILE_FORM') {\n        let formErrors = Object.assign({}, state.formErrors);\n\n        formErrors[action.data.name] = '';\n\n        newState.formErrors = formErrors;\n\n        return newState;\n    }\n\n    if (action.type === 'CLEAR_ERROR_PROFILE_FORM') {\n        let formErrors = initialState.formErrors;\n\n        newState.formErrors = formErrors;\n\n        return newState;\n    }\n\n    if (action.type === 'CLEAR_PROFILE_FORM') {\n        newState = Object.assign({}, initialState);\n\n        return newState;\n    }\n\n    return newState;\n}\n","function getFavouriteProductFromLocalStorage() {\n    let results = localStorage.getItem('favourite');\n\n    if (results == null) {\n        return [];\n    }\n\n    return JSON.parse(results);\n}\n\nconst initialState = {\n    products: getFavouriteProductFromLocalStorage()\n};\n\nexport default function (state = initialState, action) {\n    let newState = Object.assign({}, state);\n\n    if (action.type === 'FAVOURITE_UPDATE') {\n        newState.products = action.data.results;\n\n        localStorage.setItem('favourite', newState.products);\n\n        return newState;\n    }\n\n    if (action.type === 'FAVOURITE_ADD_PRODUCT') {\n        let isFind = false;\n\n        newState.products.map((item) => {\n            if (item.id == action.data.id) {\n                isFind = true;\n            }\n        });\n\n        if (!isFind) {\n            newState.products.push({\n                id: action.data.id\n            });\n\n            localStorage.setItem('favourite', JSON.stringify(newState.products));\n        }\n\n        return newState;\n    }\n\n    if (action.type === 'FAVOURITE_DELETE_PRODUCT') {\n        newState.products = newState.products.filter((item) => {\n            return item.id != action.data.id;\n        });\n\n        localStorage.setItem('favourite', JSON.stringify(newState.products));\n\n        return newState;\n    }\n\n    if (action.type === 'FAVOURITE_UPDATE_PRODUCTS') {\n        newState.products = action.data.products;\n\n        localStorage.setItem('favourite', JSON.stringify(newState.products));\n\n        return newState;\n    }\n\n    if (action.type === 'FAVOURITE_CLEAR') {\n        newState.products = [];\n\n        localStorage.setItem('favourite', JSON.stringify([]));\n\n        return newState;\n    }\n\n    return newState;\n}","const initialState = {\n    searchValue: '',\n    isSearch: false,\n    isMenuOpen: false\n};\n\nexport default function (state = initialState, action) {\n    let newState = Object.assign({}, state);\n\n    if (action.type === 'HEADER_UPDATE_SEARCH_VALUE') {\n        newState.searchValue = action.data.searchValue;\n\n        return newState;\n    }\n\n    if (action.type === 'HEADER_UPDATE_IS_SEARCH') {\n        newState.isSearch = action.data.isSearch;\n\n        return newState;\n    }\n\n    if (action.type === 'HEADER_OPEN_MENU') {\n        newState.isMenuOpen = true;\n\n        console.log(newState);\n        return newState;\n    }\n\n    if (action.type === 'HEADER_CLOSE_MENU') {\n        newState.isMenuOpen = false;\n\n        return newState;\n    }\n\n    return newState;\n}\n","import { combineReducers } from 'redux';\nimport { routerReducer } from 'react-router-redux';\n\nimport contacts from './contacts';\nimport category from './backoffice/category';\nimport product from './backoffice/product';\nimport order from './backoffice/order';\nimport list from './list';\nimport cart from './cart';\nimport profile from './profile';\nimport favourite from './favourite';\nimport header from './header';\n\nexport default combineReducers({\n  routing: routerReducer,\n\n  header,\n  contacts,\n  list,\n  cart,\n  favourite,\n  profile,\n\n  product,\n  category,\n  order\n});\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\nimport rootReducer from './reducers'\nimport { createStore } from 'redux'\n\nconst store = createStore(rootReducer);\n\nReactDOM.render(\n    <App store={store}/>,\n    document.getElementById('root')\n);\n\nregisterServiceWorker();"],"sourceRoot":""}